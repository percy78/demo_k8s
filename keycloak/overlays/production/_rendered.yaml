apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets: []
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-sr3
  namespace: keycloak
---
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets: []
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-sr6
  namespace: keycloak
---
apiVersion: v1
data:
  my.cnf: "[client]\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\nplugin_dir=/opt/bitnami/mariadb/plugin\n\n[mysqld]\ndefault_storage_engine=InnoDB\nbasedir=/opt/bitnami/mariadb\ndatadir=/bitnami/mariadb/data\nplugin_dir=/opt/bitnami/mariadb/plugin\ntmpdir=/opt/bitnami/mariadb/tmp\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\npid_file=/opt/bitnami/mariadb/tmp/mysqld.pid\nbind_address=0.0.0.0\n\n##
    Character set\n##\ncollation_server=utf8_unicode_ci\ninit_connect='SET NAMES utf8'\ncharacter_set_server=utf8\n\n##
    MyISAM\n##\nkey_buffer_size=32M\nmyisam_recover_options=FORCE,BACKUP\n\n## Safety\n##\nskip_host_cache\nskip_name_resolve\nmax_allowed_packet=16M\nmax_connect_errors=1000000\nsql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ONLY_FULL_GROUP_BY\nsysdate_is_now=1\n\n##
    Binary Logging\n##\nlog_bin=mysql-bin\nexpire_logs_days=14\n# Disabling for performance
    per http://severalnines.com/blog/9-tips-going-production-galera-cluster-mysql\nsync_binlog=0\n#
    Required for Galera\nbinlog_format=row\n\n# Sander updates for multi cluster replication\n#
    log_slave_updates=ON\n# Set server_id to the same value on all nodes in a given
    cluster, but be sure to use a different value in each cluster.\n\n# sander updates
    on GTID\n# If you want to use GTID replication, then you also need to configure
    some things to enable wsrep GTID mode. For example:\n# wsrep_gtid_mode=ON\n# wsrep_gtid_domain_id
    needs to be set to the same value on all nodes in a given cluster, so that each
    cluster node \n# uses the same domain when assigning GTIDs for Galera Cluster's
    write sets. Each cluster should have this set to a \n# different value, so that
    each cluster uses different domains when assigning GTIDs for their write sets.\n#
    log_slave_updates needs to be enabled on all nodes in the cluster. See MDEV-9855
    about that. \n# log_bin needs to be set to the same path on all nodes in the cluster.
    See MDEV-9856 about that.\n# And as an extra safety measure:\n#\n#    gtid_domain_id
    should be set to a different value on all nodes in a given cluster, and each of
    these values should \n# be different than the configured wsrep_gtid_domain_id
    value. This is to prevent a node from using the same domain used \n# for Galera
    Cluster's write sets when assigning GTIDs for non-Galera transactions, such as
    DDL executed with \n# wsrep_sst_method=RSU set or DML executed with wsrep_on=OFF
    set. \n\n## Caches and Limits\n##\ntmp_table_size=32M\nmax_heap_table_size=32M\n#
    Re-enabling as now works with Maria 10.1.2\nquery_cache_type=1\nquery_cache_limit=4M\nquery_cache_size=256M\nmax_connections=500\nthread_cache_size=50\nopen_files_limit=65535\ntable_definition_cache=4096\ntable_open_cache=4096\n\n##
    InnoDB\n##\ninnodb=FORCE\ninnodb_strict_mode=1\n# Mandatory per https://github.com/codership/documentation/issues/25\ninnodb_autoinc_lock_mode=2\n#
    Per https://www.percona.com/blog/2006/08/04/innodb-double-write/\ninnodb_doublewrite=1\ninnodb_flush_method=O_DIRECT\ninnodb_log_files_in_group=2\ninnodb_log_file_size=128M\ninnodb_flush_log_at_trx_commit=1\ninnodb_file_per_table=1\n#
    80% Memory is default reco.\n# Need to re-evaluate when DB size grows\ninnodb_buffer_pool_size=2G\ninnodb_file_format=Barracuda\n\n##
    Logging\n##\nlog_error=/opt/bitnami/mariadb/logs/mysqld.log\nslow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log\nlog_queries_not_using_indexes=1\nslow_query_log=1\n\n##
    SSL\n## Use extraVolumes and extraVolumeMounts to mount /certs filesystem\n# ssl_ca=/certs/ca.pem\n#
    ssl_cert=/certs/server-cert.pem\n# ssl_key=/certs/server-key.pem\n\n[galera]\n#
    https://mariadb.com/kb/en/configuring-mariadb-replication-between-two-mariadb-galera-clusters/\nwsrep_on=ON\nwsrep_provider=/opt/bitnami/mariadb/lib/libgalera_smm.so\nwsrep_sst_method=mariabackup\nwsrep_slave_threads=4\nwsrep_cluster_address=gcomm://\nwsrep_cluster_name=galera\nwsrep_sst_auth=\"root:\"\n#
    Enabled for performance per https://mariadb.com/kb/en/innodb-system-variables/#innodb_flush_log_at_trx_commit\ninnodb_flush_log_at_trx_commit=2\n#
    MYISAM REPLICATION SUPPORT #\nwsrep_replicate_myisam=ON\n\n[mariadb]\nplugin_load_add=auth_pam\n\n##
    Data-at-Rest Encryption\n## Use extraVolumes and extraVolumeMounts to mount /encryption
    filesystem\n# plugin_load_add=file_key_management\n# file_key_management_filename=/encryption/keyfile.enc\n#
    file_key_management_filekey=FILE:/encryption/keyfile.key\n# file_key_management_encryption_algorithm=AES_CTR\n#
    encrypt_binlog=ON\n# encrypt_tmp_files=ON\n\n## InnoDB/XtraDB Encryption\n# innodb_encrypt_tables=ON\n#
    innodb_encrypt_temporary_tables=ON\n# innodb_encrypt_log=ON\n# innodb_encryption_threads=4\n#
    innodb_encryption_rotate_key_age=1\n\n## Aria Encryption\n# aria_encrypt_tables=ON\n#
    encrypt_tmp_disk_tables=ON\n"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-configuration-sr3
  namespace: keycloak
---
apiVersion: v1
data:
  my.cnf: "[client]\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\nplugin_dir=/opt/bitnami/mariadb/plugin\n\n[mysqld]\ndefault_storage_engine=InnoDB\nbasedir=/opt/bitnami/mariadb\ndatadir=/bitnami/mariadb/data\nplugin_dir=/opt/bitnami/mariadb/plugin\ntmpdir=/opt/bitnami/mariadb/tmp\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\npid_file=/opt/bitnami/mariadb/tmp/mysqld.pid\nbind_address=0.0.0.0\n\n##
    Character set\n##\ncollation_server=utf8_unicode_ci\ninit_connect='SET NAMES utf8'\ncharacter_set_server=utf8\n\n##
    MyISAM\n##\nkey_buffer_size=32M\nmyisam_recover_options=FORCE,BACKUP\n\n## Safety\n##\nskip_host_cache\nskip_name_resolve\nmax_allowed_packet=16M\nmax_connect_errors=1000000\nsql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ONLY_FULL_GROUP_BY\nsysdate_is_now=1\n\n##
    Binary Logging\n##\nlog_bin=mysql-bin\nexpire_logs_days=14\n# Disabling for performance
    per http://severalnines.com/blog/9-tips-going-production-galera-cluster-mysql\nsync_binlog=0\n#
    Required for Galera\nbinlog_format=row\n\n# Sander updates for multi cluster replication\n#
    log_slave_updates=ON\n# Set server_id to the same value on all nodes in a given
    cluster, but be sure to use a different value in each cluster.\n\n# sander updates
    on GTID\n# If you want to use GTID replication, then you also need to configure
    some things to enable wsrep GTID mode. For example:\n# wsrep_gtid_mode=ON\n# wsrep_gtid_domain_id
    needs to be set to the same value on all nodes in a given cluster, so that each
    cluster node \n# uses the same domain when assigning GTIDs for Galera Cluster's
    write sets. Each cluster should have this set to a \n# different value, so that
    each cluster uses different domains when assigning GTIDs for their write sets.\n#
    log_slave_updates needs to be enabled on all nodes in the cluster. See MDEV-9855
    about that. \n# log_bin needs to be set to the same path on all nodes in the cluster.
    See MDEV-9856 about that.\n# And as an extra safety measure:\n#\n#    gtid_domain_id
    should be set to a different value on all nodes in a given cluster, and each of
    these values should \n# be different than the configured wsrep_gtid_domain_id
    value. This is to prevent a node from using the same domain used \n# for Galera
    Cluster's write sets when assigning GTIDs for non-Galera transactions, such as
    DDL executed with \n# wsrep_sst_method=RSU set or DML executed with wsrep_on=OFF
    set. \n\n## Caches and Limits\n##\ntmp_table_size=32M\nmax_heap_table_size=32M\n#
    Re-enabling as now works with Maria 10.1.2\nquery_cache_type=1\nquery_cache_limit=4M\nquery_cache_size=256M\nmax_connections=500\nthread_cache_size=50\nopen_files_limit=65535\ntable_definition_cache=4096\ntable_open_cache=4096\n\n##
    InnoDB\n##\ninnodb=FORCE\ninnodb_strict_mode=1\n# Mandatory per https://github.com/codership/documentation/issues/25\ninnodb_autoinc_lock_mode=2\n#
    Per https://www.percona.com/blog/2006/08/04/innodb-double-write/\ninnodb_doublewrite=1\ninnodb_flush_method=O_DIRECT\ninnodb_log_files_in_group=2\ninnodb_log_file_size=128M\ninnodb_flush_log_at_trx_commit=1\ninnodb_file_per_table=1\n#
    80% Memory is default reco.\n# Need to re-evaluate when DB size grows\ninnodb_buffer_pool_size=2G\ninnodb_file_format=Barracuda\n\n##
    Logging\n##\nlog_error=/opt/bitnami/mariadb/logs/mysqld.log\nslow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log\nlog_queries_not_using_indexes=1\nslow_query_log=1\n\n##
    SSL\n## Use extraVolumes and extraVolumeMounts to mount /certs filesystem\n# ssl_ca=/certs/ca.pem\n#
    ssl_cert=/certs/server-cert.pem\n# ssl_key=/certs/server-key.pem\n\n[galera]\n#
    https://mariadb.com/kb/en/configuring-mariadb-replication-between-two-mariadb-galera-clusters/\nwsrep_on=ON\nwsrep_provider=/opt/bitnami/mariadb/lib/libgalera_smm.so\nwsrep_sst_method=mariabackup\nwsrep_slave_threads=4\nwsrep_cluster_address=gcomm://\nwsrep_cluster_name=galera\nwsrep_sst_auth=\"root:\"\n#
    Enabled for performance per https://mariadb.com/kb/en/innodb-system-variables/#innodb_flush_log_at_trx_commit\ninnodb_flush_log_at_trx_commit=2\n#
    MYISAM REPLICATION SUPPORT #\nwsrep_replicate_myisam=ON\n\n[mariadb]\nplugin_load_add=auth_pam\n\n##
    Data-at-Rest Encryption\n## Use extraVolumes and extraVolumeMounts to mount /encryption
    filesystem\n# plugin_load_add=file_key_management\n# file_key_management_filename=/encryption/keyfile.enc\n#
    file_key_management_filekey=FILE:/encryption/keyfile.key\n# file_key_management_encryption_algorithm=AES_CTR\n#
    encrypt_binlog=ON\n# encrypt_tmp_files=ON\n\n## InnoDB/XtraDB Encryption\n# innodb_encrypt_tables=ON\n#
    innodb_encrypt_temporary_tables=ON\n# innodb_encrypt_log=ON\n# innodb_encryption_threads=4\n#
    innodb_encryption_rotate_key_age=1\n\n## Aria Encryption\n# aria_encrypt_tables=ON\n#
    encrypt_tmp_disk_tables=ON\n"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-configuration-sr6
  namespace: keycloak
---
apiVersion: v1
data:
  server-block.conf: "server {\n  listen 8443 ssl;\n\n  include /opt/bitnami/nginx/conf/mime.types;\n
    \ default_type application/octet-stream;\n  \n  ssl_certificate          /etc/server-cert-secret-volume/chain.pem;\n
    \ ssl_certificate_key      /etc/server-cert-secret-volume/key.pem;\n  # ssl_trusted_certificate
    \ /etc/server-cert-secret-volume/ca.pem;\n\n  # Enabling SSL session cache improves
    the performance of HTTPS websites. \n  # The following directives must be placed
    after ssl_trusted_certificate. \n  # They enable shared caching of size 20MB with
    a cache lifetime of 10 minutes.\n  ssl_session_cache shared:SSL:20m;\n  ssl_session_timeout
    10m;\n\n  # Specify the protocols and ciphers to be used in the SSL connection.
    \n  # Here we are allowing only TLS v1.3 and disabled insecure ciphers like MD5
    and DSS.\n  ssl_prefer_server_ciphers       on;\n  ssl_protocols TLSv1.3;\n  ssl_ciphers
    \ HIGH:!aNULL:!MD5:!DSS;\n\n  location / {\n    proxy_set_header Host $host;\n
    \   proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For
    $proxy_protocol_addr;\n    proxy_set_header X-Forwarded-Proto $scheme;\n\n    #
    When buffering of responses from the proxied server is enabled, limits the total
    size of \n    # buffers that can be busy sending a response to the client while
    the response is not yet \n    # fully read. In the meantime, the rest of the buffers
    can be used for reading the response \n    # and, if needed, buffering part of
    the response to a temporary file. By default, size is \n    # limited by the size
    of two buffers set by the proxy_buffer_size and proxy_buffers directives.\n    proxy_busy_buffers_size
    \  512k;\n\n    # Sets the number (4) and size (512k) of the buffers used for
    reading a response from the \n    # proxied server, for a single connection.\n
    \   proxy_buffers   4 512k;\n\n    # Sets the size of the buffer used for reading
    the first part of the response received from \n    # the proxied server. \n    proxy_buffer_size
    \  256k;\n\n    proxy_read_timeout 60;\n    proxy_connect_timeout 60;\n    proxy_send_timeout
    60;\n   \n    proxy_pass http://keycloak-http.keycloak.svc.cluster.local:80/;\n
    \ }\n}"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-server-block-sr3
  namespace: keycloak
---
apiVersion: v1
data:
  server-block.conf: "server {\n  listen 8443 ssl;\n\n  include /opt/bitnami/nginx/conf/mime.types;\n
    \ default_type application/octet-stream;\n  \n  ssl_certificate          /etc/server-cert-secret-volume/chain.pem;\n
    \ ssl_certificate_key      /etc/server-cert-secret-volume/key.pem;\n  # ssl_trusted_certificate
    \ /etc/server-cert-secret-volume/ca.pem;\n\n  # Enabling SSL session cache improves
    the performance of HTTPS websites. \n  # The following directives must be placed
    after ssl_trusted_certificate. \n  # They enable shared caching of size 20MB with
    a cache lifetime of 10 minutes.\n  ssl_session_cache shared:SSL:20m;\n  ssl_session_timeout
    10m;\n\n  # Specify the protocols and ciphers to be used in the SSL connection.
    \n  # Here we are allowing only TLS v1.3 and disabled insecure ciphers like MD5
    and DSS.\n  ssl_prefer_server_ciphers       on;\n  ssl_protocols TLSv1.3;\n  ssl_ciphers
    \ HIGH:!aNULL:!MD5:!DSS;\n\n  location / {\n    proxy_set_header Host $host;\n
    \   proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For
    $proxy_protocol_addr;\n    proxy_set_header X-Forwarded-Proto $scheme;\n\n    #
    When buffering of responses from the proxied server is enabled, limits the total
    size of \n    # buffers that can be busy sending a response to the client while
    the response is not yet \n    # fully read. In the meantime, the rest of the buffers
    can be used for reading the response \n    # and, if needed, buffering part of
    the response to a temporary file. By default, size is \n    # limited by the size
    of two buffers set by the proxy_buffer_size and proxy_buffers directives.\n    proxy_busy_buffers_size
    \  512k;\n\n    # Sets the number (4) and size (512k) of the buffers used for
    reading a response from the \n    # proxied server, for a single connection.\n
    \   proxy_buffers   4 512k;\n\n    # Sets the size of the buffer used for reading
    the first part of the response received from \n    # the proxied server. \n    proxy_buffer_size
    \  256k;\n\n    proxy_read_timeout 60;\n    proxy_connect_timeout 60;\n    proxy_send_timeout
    60;\n   \n    proxy_pass http://keycloak-http.keycloak.svc.cluster.local:80/;\n
    \ }\n}"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-server-block-sr6
  namespace: keycloak
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db
  namespace: keycloak
spec:
  ports:
  - appProtocol: mysql
    name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/name: mariadb-galera
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-headless
  namespace: keycloak
spec:
  clusterIP: None
  ports:
  - appProtocol: mysql
    name: galera
    port: 4567
    targetPort: galera
  - appProtocol: mysql
    name: ist
    port: 4568
    targetPort: ist
  - appProtocol: mysql
    name: sst
    port: 4444
    targetPort: sst
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/name: mariadb-galera
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: headless
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-headless
  namespace: keycloak
spec:
  clusterIP: None
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/name: keycloakx
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: http
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-http
  namespace: keycloak
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/name: keycloakx
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: keycloak-pool-sr3
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-sr3
  namespace: keycloak
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  selector:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/name: nginx
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: keycloak-pool-sr6
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-sr6
  namespace: keycloak
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  selector:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/name: nginx
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-keycloak-db-sr3-0
  namespace: keycloak
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: pv-grprodworker01-7
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-keycloak-db-sr3-1
  namespace: keycloak
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: pv-grprodworker03-7
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-keycloak-db-sr6-0
  namespace: keycloak
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: pv-grprodworker02-7
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-keycloak-db-sr6-1
  namespace: keycloak
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: pv-grprodworker04-7
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-sr3
  namespace: keycloak
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/name: nginx
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: "1"
        checksum/server-block-configuration: 614d71d34db55eaf9825b63588c0291743087c424e4294d1eb91507437e79686
        version/keycloak-server-cert-secret: v1
      labels:
        app.kubernetes.io/instance: nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nginx
        helm.sh/chart: nginx-13.2.24
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                  - test
                matchLabels:
                  app.kubernetes.io/instance: nginx
                  app.kubernetes.io/name: nginx
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - test
              matchLabels:
                app.kubernetes.io/instance: nginx
                app.kubernetes.io/name: nginx
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: NGINX_HTTP_PORT_NUMBER
          value: "8080"
        - name: NGINX_HTTPS_PORT_NUMBER
          value: "8443"
        image: docker.io/bitnami/nginx:1.23.3-debian-11-r17
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 5
        name: nginx
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - mountPath: /opt/bitnami/nginx/conf/server_blocks
          name: nginx-server-block
        - mountPath: /etc/server-cert-secret-volume
          name: server-cert-secret-volume
          readOnly: true
      hostIPC: false
      hostNetwork: false
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR3
      serviceAccountName: default
      shareProcessNamespace: false
      volumes:
      - configMap:
          name: nginx-server-block-sr3
        name: nginx-server-block
      - name: server-cert-secret-volume
        secret:
          secretName: keycloak-server-cert-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-sr6
  namespace: keycloak
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/name: nginx
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: "1"
        checksum/server-block-configuration: 614d71d34db55eaf9825b63588c0291743087c424e4294d1eb91507437e79686
        version/keycloak-server-cert-secret: v1
      labels:
        app.kubernetes.io/instance: nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nginx
        helm.sh/chart: nginx-13.2.24
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                  - test
                matchLabels:
                  app.kubernetes.io/instance: nginx
                  app.kubernetes.io/name: nginx
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - test
              matchLabels:
                app.kubernetes.io/instance: nginx
                app.kubernetes.io/name: nginx
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: NGINX_HTTP_PORT_NUMBER
          value: "8080"
        - name: NGINX_HTTPS_PORT_NUMBER
          value: "8443"
        image: docker.io/bitnami/nginx:1.23.3-debian-11-r17
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 5
        name: nginx
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - mountPath: /opt/bitnami/nginx/conf/server_blocks
          name: nginx-server-block
        - mountPath: /etc/server-cert-secret-volume
          name: server-cert-secret-volume
          readOnly: true
      hostIPC: false
      hostNetwork: false
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR6
      serviceAccountName: default
      shareProcessNamespace: false
      volumes:
      - configMap:
          name: nginx-server-block-sr6
        name: nginx-server-block
      - name: server-cert-secret-volume
        secret:
          secretName: keycloak-server-cert-secret
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-sr3
  namespace: keycloak
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: mariadb
      app.kubernetes.io/name: mariadb-galera
  serviceName: keycloak-db-headless
  template:
    metadata:
      annotations:
        version/keycloak-db-secret: v1
      labels:
        app.kubernetes.io/instance: mariadb
        app.kubernetes.io/name: mariadb-galera
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: mariadb
                  app.kubernetes.io/name: mariadb-galera
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - command:
        - bash
        - -ec
        - |
          # Bootstrap from the indicated node
          NODE_ID="${MY_POD_NAME#"keycloak-db-"}"
          if [[ "$NODE_ID" -eq "0" ]]; then
              export MARIADB_GALERA_CLUSTER_BOOTSTRAP=yes
              export MARIADB_GALERA_FORCE_SAFETOBOOTSTRAP=yes
          else
              export MARIADB_GALERA_CLUSTER_BOOTSTRAP=no
          fi
          exec /opt/bitnami/scripts/mariadb-galera/entrypoint.sh /opt/bitnami/scripts/mariadb-galera/run.sh
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MARIADB_DEFAULT_PORT_NUMBER
          value: "3306"
        - name: MARIADB_GALERA_CLUSTER_NAME
          value: galera
        - name: MARIADB_GALERA_CLUSTER_ADDRESS
          value: gcomm://keycloak-db-sr3-0.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr3-1.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr6-0.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr6-1.keycloak-db-headless.keycloak.svc.cluster.local,
        - name: MARIADB_ROOT_USER
          value: root
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-root-password
              name: keycloak-db-secret
        - name: MARIADB_USER
          value: keycloak-admin
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: keycloak-db-secret
        - name: MARIADB_DATABASE
          value: keycloak
        - name: MARIADB_GALERA_MARIABACKUP_USER
          value: mariabackup
        - name: MARIADB_GALERA_MARIABACKUP_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-galera-mariabackup-password
              name: keycloak-db-secret
        - name: MARIADB_ENABLE_LDAP
          value: "no"
        - name: MARIADB_ENABLE_TLS
          value: "no"
        image: docker.io/bitnami/mariadb-galera:10.6.12-debian-11-r6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              exec mysql -u"${MARIADB_ROOT_USER}" -p"${password_aux}" -e "select * from mysql.wsrep_cluster_members;"
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: mariadb-galera
        ports:
        - containerPort: 3306
          name: mysql
        - containerPort: 4567
          name: galera
        - containerPort: 4568
          name: ist
        - containerPort: 4444
          name: sst
        readinessProbe:
          exec:
            command:
            - bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              exec mysqladmin status -u"${MARIADB_ROOT_USER}" -p"${password_aux}"
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /opt/bitnami/mariadb/.bootstrap
          name: previous-boot
        - mountPath: /bitnami/mariadb
          name: data
        - mountPath: /bitnami/conf/my.cnf
          name: mariadb-galera-config
          subPath: my.cnf
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR3
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: default
      volumes:
      - emptyDir: {}
        name: previous-boot
      - configMap:
          name: keycloak-db-configuration-sr3
        name: mariadb-galera-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        app.kubernetes.io/instance: mariadb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mariadb-galera
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: local-storage
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-sr6
  namespace: keycloak
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: mariadb
      app.kubernetes.io/name: mariadb-galera
  serviceName: keycloak-db-headless
  template:
    metadata:
      annotations:
        version/keycloak-db-secret: v1
      labels:
        app.kubernetes.io/instance: mariadb
        app.kubernetes.io/name: mariadb-galera
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: mariadb
                  app.kubernetes.io/name: mariadb-galera
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - command:
        - bash
        - -ec
        - |
          # Bootstrap from the indicated node
          NODE_ID="${MY_POD_NAME#"keycloak-db-"}"
          if [[ "$NODE_ID" -eq "0" ]]; then
              export MARIADB_GALERA_CLUSTER_BOOTSTRAP=yes
              export MARIADB_GALERA_FORCE_SAFETOBOOTSTRAP=yes
          else
              export MARIADB_GALERA_CLUSTER_BOOTSTRAP=no
          fi
          exec /opt/bitnami/scripts/mariadb-galera/entrypoint.sh /opt/bitnami/scripts/mariadb-galera/run.sh
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MARIADB_DEFAULT_PORT_NUMBER
          value: "3306"
        - name: MARIADB_GALERA_CLUSTER_NAME
          value: galera
        - name: MARIADB_GALERA_CLUSTER_ADDRESS
          value: gcomm://keycloak-db-sr3-0.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr3-1.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr6-0.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr6-1.keycloak-db-headless.keycloak.svc.cluster.local,
        - name: MARIADB_ROOT_USER
          value: root
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-root-password
              name: keycloak-db-secret
        - name: MARIADB_USER
          value: keycloak-admin
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: keycloak-db-secret
        - name: MARIADB_DATABASE
          value: keycloak
        - name: MARIADB_GALERA_MARIABACKUP_USER
          value: mariabackup
        - name: MARIADB_GALERA_MARIABACKUP_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-galera-mariabackup-password
              name: keycloak-db-secret
        - name: MARIADB_ENABLE_LDAP
          value: "no"
        - name: MARIADB_ENABLE_TLS
          value: "no"
        image: docker.io/bitnami/mariadb-galera:10.6.12-debian-11-r6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              exec mysql -u"${MARIADB_ROOT_USER}" -p"${password_aux}" -e "select * from mysql.wsrep_cluster_members;"
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: mariadb-galera
        ports:
        - containerPort: 3306
          name: mysql
        - containerPort: 4567
          name: galera
        - containerPort: 4568
          name: ist
        - containerPort: 4444
          name: sst
        readinessProbe:
          exec:
            command:
            - bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              exec mysqladmin status -u"${MARIADB_ROOT_USER}" -p"${password_aux}"
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /opt/bitnami/mariadb/.bootstrap
          name: previous-boot
        - mountPath: /bitnami/mariadb
          name: data
        - mountPath: /bitnami/conf/my.cnf
          name: mariadb-galera-config
          subPath: my.cnf
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR6
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: default
      volumes:
      - emptyDir: {}
        name: previous-boot
      - configMap:
          name: keycloak-db-configuration-sr6
        name: mariadb-galera-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        app.kubernetes.io/instance: mariadb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mariadb-galera
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: local-storage
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-sr3
  namespace: keycloak
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloakx
  serviceName: keycloak-headless
  template:
    metadata:
      annotations:
        checksum/config-startup: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        version/keycloak-admin-secret: v1
        version/keycloak-db-secret: v1
      labels:
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/name: keycloakx
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                  - test
                matchLabels:
                  app.kubernetes.io/instance: keycloak
                  app.kubernetes.io/name: keycloakx
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - test
              matchLabels:
                app.kubernetes.io/instance: keycloak
                app.kubernetes.io/name: keycloakx
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --verbose
        - start
        - --spi-events-listener-jboss-logging-success-level=info
        - --spi-events-listener-jboss-logging-error-level=warn
        command:
        - /opt/keycloak/bin/kc.sh
        env:
        - name: KC_LOG_LEVEL
          value: INFO,io.quarkus.vertx.http:TRACE
        - name: KC_HOSTNAME_ADMIN
          value: grprodkeycloak.estpak.ee
        - name: KC_HOSTNAME
          value: grprodkeycloak.estpak.ee
        - name: KC_HTTP_RELATIVE_PATH
          value: /
        - name: KC_CACHE
          value: ispn
        - name: KC_CACHE_STACK
          value: kubernetes
        - name: KC_PROXY
          value: edge
        - name: KC_DB
          value: mariadb
        - name: KC_DB_URL_HOST
          value: keycloak-db.keycloak.svc.cluster.local
        - name: KC_DB_URL_PORT
          value: "3306"
        - name: KC_DB_URL_DATABASE
          value: keycloak
        - name: KC_DB_USERNAME
          value: keycloak-admin
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: keycloak-db-secret
        - name: KC_METRICS_ENABLED
          value: "true"
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_TRANSACTION_XA_ENABLED
          value: "false"
        - name: KC_HOSTNAME_PATH
          value: /
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_HTTP_PORT
          value: "8080"
        - name: KC_HOSTNAME_STRICT
          value: "true"
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "true"
        - name: KC_HOSTNAME_STRICT_BACKCHANNEL
          value: "false"
        - name: JAVA_OPTS_APPEND
          value: -XX:+UseContainerSupport -XX:MaxRAMPercentage=50.0 -Dcom.redhat.fips=false
            -Djgroups.dns.query=keycloak-headless.keycloak.svc.cluster.local
        envFrom:
        - secretRef:
            name: keycloak-admin-secret
        image: quay.io/keycloak/keycloak:20.0.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 0
          timeoutSeconds: 5
        name: keycloak
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 1
      enableServiceLinks: true
      initContainers:
      - command:
        - sh
        - -c
        - |
          echo 'Waiting for Database to become ready...'

          until printf "." && nc -z -w 2 keycloak-db.keycloak.svc.cluster.local 3306; do
              sleep 2;
          done;

          echo 'Database OK ✓'
        image: docker.io/busybox:1.32
        imagePullPolicy: IfNotPresent
        name: dbchecker
        resources:
          limits:
            cpu: 20m
            memory: 32Mi
          requests:
            cpu: 20m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR3
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      serviceAccountName: keycloak-sr3
      terminationGracePeriodSeconds: 60
  updateStrategy:
    type: RollingUpdate
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-sr6
  namespace: keycloak
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloakx
  serviceName: keycloak-headless
  template:
    metadata:
      annotations:
        checksum/config-startup: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        version/keycloak-admin-secret: v1
        version/keycloak-db-secret: v1
      labels:
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/name: keycloakx
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                  - test
                matchLabels:
                  app.kubernetes.io/instance: keycloak
                  app.kubernetes.io/name: keycloakx
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - test
              matchLabels:
                app.kubernetes.io/instance: keycloak
                app.kubernetes.io/name: keycloakx
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --verbose
        - start
        - --spi-events-listener-jboss-logging-success-level=info
        - --spi-events-listener-jboss-logging-error-level=warn
        command:
        - /opt/keycloak/bin/kc.sh
        env:
        - name: KC_LOG_LEVEL
          value: INFO,io.quarkus.vertx.http:TRACE
        - name: KC_HOSTNAME_ADMIN
          value: grprodkeycloak.estpak.ee
        - name: KC_HOSTNAME
          value: grprodkeycloak.estpak.ee
        - name: KC_HTTP_RELATIVE_PATH
          value: /
        - name: KC_CACHE
          value: ispn
        - name: KC_CACHE_STACK
          value: kubernetes
        - name: KC_PROXY
          value: edge
        - name: KC_DB
          value: mariadb
        - name: KC_DB_URL_HOST
          value: keycloak-db.keycloak.svc.cluster.local
        - name: KC_DB_URL_PORT
          value: "3306"
        - name: KC_DB_URL_DATABASE
          value: keycloak
        - name: KC_DB_USERNAME
          value: keycloak-admin
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: keycloak-db-secret
        - name: KC_METRICS_ENABLED
          value: "true"
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_TRANSACTION_XA_ENABLED
          value: "false"
        - name: KC_HOSTNAME_PATH
          value: /
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_HTTP_PORT
          value: "8080"
        - name: KC_HOSTNAME_STRICT
          value: "true"
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "true"
        - name: KC_HOSTNAME_STRICT_BACKCHANNEL
          value: "false"
        - name: JAVA_OPTS_APPEND
          value: -XX:+UseContainerSupport -XX:MaxRAMPercentage=50.0 -Dcom.redhat.fips=false
            -Djgroups.dns.query=keycloak-headless.keycloak.svc.cluster.local
        envFrom:
        - secretRef:
            name: keycloak-admin-secret
        image: quay.io/keycloak/keycloak:20.0.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 0
          timeoutSeconds: 5
        name: keycloak
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 1
      enableServiceLinks: true
      initContainers:
      - command:
        - sh
        - -c
        - |
          echo 'Waiting for Database to become ready...'

          until printf "." && nc -z -w 2 keycloak-db.keycloak.svc.cluster.local 3306; do
              sleep 2;
          done;

          echo 'Database OK ✓'
        image: docker.io/busybox:1.32
        imagePullPolicy: IfNotPresent
        name: dbchecker
        resources:
          limits:
            cpu: 20m
            memory: 32Mi
          requests:
            cpu: 20m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR6
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      serviceAccountName: keycloak-sr6
      terminationGracePeriodSeconds: 60
  updateStrategy:
    type: RollingUpdate
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  creationTimestamp: null
  name: keycloak-admin-secret
  namespace: keycloak
spec:
  encryptedData:
    KEYCLOAK_ADMIN: AgCh3tV6SD4ys9vKzhHHQAjNnnTAVdgZAmKPtypUWfIPdFqItDtF6koNj31k0efape+OOq7S/w92BDJx1a3pGTknS6dhfX238ii+6xU9WwOlNtih765K9HI8zlN1sJPte1op7vZhJaA6J6O+UIM8lgQSrIcgDNVD9OQvEcSxLSmN/fFBg1zxg9O0A/K0e8JGOyweiYxmVneDrlm7MofmeedocF8B4iS2tFR6lRg70pRBYGegdcvr5z4+LT2znYT58OwtOGbTGUPzRB6dhvtMGHcgBdtl1H7dZ0N6Lbl1WGRcrnJKX/ujTSIVA20yUrjnbj7Prd1AtLUq2xuxnH0FtzHJkQYSh9Oufbaz6kFR3h9R2YqBfhEYVsmotHMweClXbWfJNK3AGYKdaT4YGnEfLnKY/RDagJ/vdpjyiJIvDveUsXgDmmL5vZRWKlesnvvD8zuCon67BnCFfLesmgMEfgqHM9r1c3z9AmYm+DTW1EKhnVyf4PnRls2HIk/0NQPIaLgEvRNFHNaiCu1GVU1XI2JLW4BJdYF/WfXd5RR+W8UFKeU15eBx3rWpPQ1/jnQRHWx5dyDkHbAOG41RlB4061lJLknpvp2ic8b9A6KynLWaFT+5y6d9mjRnNltwjT7pzzvg5oHRjthq+PqMd7Op+LzMBX0bHwPPxbBm3ElcurxfNc+ogVy1pu0Y5xuzDuItwCpfA/mQzA==
    KEYCLOAK_ADMIN_PASSWORD: AgCpO6Ob7glocbsKsOea7h/p7B0/JD6riGhK5v5HbP69SRfV6fE6n2wutL5uBh8CWh6rWYL8M8p9nnxtoq5IUPGQ+92kBs3+ZcVxpeb+C7x716yA9Ip8fRnOotgribFbpcWDmD+ZvKE55ChGcNv1hbShnHfLZQlAaD7EpevHUkxJVIYw1Eh4+wF6phDdRItriixLKL+wPTvB/MsaxafzB8/IAyEuAApGsjPTEw4g7bn035KnbT+sG3H3C1ohhiFxywwch/znyns1PW2VvJ54hzYoca6uaxBsh/N+gC9YwzkEswg/acGboBnEokA1JFe5QhCApmPpQmgTKrONrPrO26UTX5JleENshK8mzmx4dt0wDnvy8Mzk7B6L+EiFt15zpd+2bX0uCtiJ5bQUD928FY7n4Umv6hpWglqifIB42NVxqSnE77SemSsBG5I2oxDD9dDnusmq4TzSPJ/AOb3UoBuIj95befzxvDS8ju2Dp+T0w/65luE2Jtc8+wI0j3XGqI8vbl4/3zbdp+3wl9iYpSCNTNhSrNPTUyGrNC7tAYUAgDUoJmG+82gfpky4VEopVrJywuWSshO4KtuZdJcBXqkE09yLcDVMG0Zpjv8Ez0g1XXw8QL6kvFKHMAu8eFMOHSoODx++y3yisycB6WLfXcHquaD+1bhdG/4eC3tHONRcAwJO3LosFfCT65ufmMysBihj+J0kj9fIU0o1VIu3ShJXBfg=
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: "true"
        version/keycloak-admin-secret: v1
      creationTimestamp: null
      name: keycloak-admin-secret
      namespace: keycloak
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  creationTimestamp: null
  name: keycloak-db-secret
  namespace: keycloak
spec:
  encryptedData:
    mariadb-galera-mariabackup-password: AgBy5tVE++Q2m5rONCX/aNQv2bWdhK7iAcCxWiO5n8hwUnWVXAX5qeUzZW1hvLmjlSvjSwV8hNMUXtaGEqOZZmRpBmtH4zwJooqo8IcI0YxJQjuwmfwKPVHMGiuZIWWadyry9fbb0b+3/aW5h4ZDA4j9G8lZnZ9Gyj0EoU7u+dwORwVE2BAC8XBOfeZN1i/D/t8vRIZPCsoCLPZES3LqdWX698AxlBcG+oCuhSpn03vQ5j6OCMqhyWnhIPn5s3VTVCH/LpFZp3BXQQ7FuGpTo3pE1Si5GBkJo0B34vFS79/gcEPw9C8XTk9N2DvtfiXctfQmwMy38j7V+1BSRrqglCcVv2pxh9XG0m2LDUycMCBHu3ciOWuf2sWE9XZJm2WubxFyilemepSJQnjkm0gZzbozRSmuX20txQcubqlxyhGDilZkdXyj8MfTkOF/ZezEdzZ0/z/nffi6mrR8/IPqX4PzBNg0kV7xXzymPJBmhCkl8c7TDQHfnxAEkByMqPauhCnWqeA3gFpZnYBQUHMg/UDs0SXr0F50NRpgKIrXnz6tfnNsTFFhkHWezRK+UfTiSWSROK4JGmacjA/WyFA6GbL/7voNkyfKvZviH5gTcYGe1Y3Gbo3vM8pA+zx33U61dglCedqPznyDXEc3HM4nhbf05lFbUd73231JM9YntZLjN5ycfc+cFcNBtC/5hHC5YdRh13MpBUBGWT7zw+DRWgKt
    mariadb-password: AgCAxp73ix9FgR0K2MVP5LDANYS4TA3RI52KGhqX9Z9RkRy5DFTOqIE8XnxPmB2SpQXFJu8Web8jWgH3/80XCy2zHZ680KWOMp5Fk4KpgABaAgEfQ7RDSFEvILwNoQT2J5GFG1BVD2I5vPodXNDPTZyeLbnLU1T/OgvMvkNrJPBMeRd8q5jXqZV9yAfGC8idvcy+V5MSRfGBv7YIhagiyant+RT0OIJTwU+w/dWgq9eBMG4FCNq28G57yYnV+kdWZ/dKAoznAIDA54/QlFX/eAbq19AI4fx2fpA6DNUrPVQmnCrVkkJ1k+x5lRpg+tGxR6ftf5FD+2Hcw4QyeccKnxKKe0vSTsdxrIMN+npEKFQSWrvK2pJF6GGCq+jPX8TQbFmFGPZ64cfnYSFvD4glOqSfLqOpMfQHrEAFbVQmpO2m8Dg2RXz+h+Ge6t47/k5ayTMWNdgi7T7argT/qHSJttikI21BeiMl2gDf/FU38A5/+jesqNEXkUUTFB0GK4eA2RxHDDzgm2zDFF3wNjLYV+N501jWI6Ubrr7qBxBxCxSgvyATVi+veDHvruhovN/zI/GkhdgfR0fGm2evVzBuBv/Yo2yUMKq1isMWNDF/KhtAHwkQGsM9cKV99gp8Kt1Y/MhpYlQWY33xVHYNSQlochvEIdxxhlnNyOA/itC555Thue+SaakBLgrbntkTa4HjqWEHXnFMm47kdyxwZFzkcfI=
    mariadb-root-password: AgBlAe7FUoAqjXpOmxbIbpLhfGBDGOUkPbSw8PhSppNkcJBUTubVKc8eTFUfkF1f0QMKinMnRNis/zZYYPanYiJk5No2vCEDqczSHFQKzcCglIucZjQoqGZAk/M+DYe1wB18xZEBl09s5KmW6DlzCY8aVBqhIZ8zgntHYfbpO1DQIDwWf1yqI2XEsrIEK06o+t+YvgvDFdB/mX/4FM+RbjF6Mmt/Ghedgt8G+uzDR58sZaddWtYJn92BqtHvoMq7D4sVvXIT7q1krc+Ehqj9k4ILvGQDN+X33Ut7KF02a8XIoRqzrIById/PgDI2gzbpf7+1J4WVN7W2zImmK06srLiEXZZlAjlCTM4zYQKRGfumkIhL3g+Vx8K+G35NYMzTf46zgLZvrNyc5/pxPCpwBvQmhT5UcS1Gt/kq//ifuqgqEynKjuNUkBmnuFnt/UwuSEb+z1AZRcAKU9mRhiPXmu0QssfEbau+shWTk6LHwJwFReMaoNOW6Rj5qnOVZvxxwaS3olV4PrjHSrMRv/mM1qa8CibUNNLcISgg9BU/EUoZGo2KWHbVl/XjMgg/lBWvNICcyD/bref6X14BIAtw33STrierhFTxVB54OkIHm9QZzgqd+vM89+Ws/HwsqlCZV+0AuesuGyInguj/NM2fzlkTKsipZowCE1sobkreQa4UAm7h5pR+sBlfGemJmMDP2FsCrkMoP+XWvHx+o1VNQOZHTG1c
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: "true"
        version/keycloak-db-secret: v1
      creationTimestamp: null
      name: keycloak-db-secret
      namespace: keycloak
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  creationTimestamp: null
  name: keycloak-server-cert-secret
  namespace: keycloak
spec:
  encryptedData:
    ca.pem: 
    cert.pem: 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
    chain.pem: 
    key.pem: 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
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: "0"
        sealedsecrets.bitnami.com/cluster-wide: "true"
        version/keycloak-server-cert-secret: v1
      creationTimestamp: null
      name: keycloak-server-cert-secret
      namespace: keycloak
    type: Opaque
---
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: keycloak-pool-sr3
  namespace: metallb-system
spec:
  addresses:
  - 194.126.105.141/32
  autoAssign: true
  avoidBuggyIPs: true
---
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: keycloak-pool-sr6
  namespace: metallb-system
spec:
  addresses:
  - 194.126.105.204/32
  autoAssign: true
  avoidBuggyIPs: true
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: keycloak-pool-sr3
  namespace: metallb-system
spec:
  ipAddressPools:
  - keycloak-pool-sr3
  nodeSelectors:
  - matchLabels:
      topology.kubernetes.io/zone: SR3
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: keycloak-pool-sr6
  namespace: metallb-system
spec:
  ipAddressPools:
  - keycloak-pool-sr6
  nodeSelectors:
  - matchLabels:
      topology.kubernetes.io/zone: SR6
