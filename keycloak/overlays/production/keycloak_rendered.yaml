apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets: []
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-sr3
  namespace: keycloak
---
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets: []
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-sr6
  namespace: keycloak
---
apiVersion: v1
data:
  my.cnf: "[client]\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\nplugin_dir=/opt/bitnami/mariadb/plugin\n\n[mysqld]\ndefault_storage_engine=InnoDB\nbasedir=/opt/bitnami/mariadb\ndatadir=/bitnami/mariadb/data\nplugin_dir=/opt/bitnami/mariadb/plugin\ntmpdir=/opt/bitnami/mariadb/tmp\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\npid_file=/opt/bitnami/mariadb/tmp/mysqld.pid\nbind_address=0.0.0.0\n\n##
    Character set\n##\ncollation_server=utf8_unicode_ci\ninit_connect='SET NAMES utf8'\ncharacter_set_server=utf8\n\n##
    MyISAM\n##\nkey_buffer_size=32M\nmyisam_recover_options=FORCE,BACKUP\n\n## Safety\n##\nskip_host_cache\nskip_name_resolve\nmax_allowed_packet=16M\nmax_connect_errors=1000000\nsql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ONLY_FULL_GROUP_BY\nsysdate_is_now=1\n\n##
    Binary Logging\n##\nlog_bin=mysql-bin\nexpire_logs_days=14\n# Disabling for performance
    per http://severalnines.com/blog/9-tips-going-production-galera-cluster-mysql\nsync_binlog=0\n#
    Required for Galera\nbinlog_format=row\n\n# Sander updates for multi cluster replication\n#
    log_slave_updates=ON\n# Set server_id to the same value on all nodes in a given
    cluster, but be sure to use a different value in each cluster.\n\n# sander updates
    on GTID\n# If you want to use GTID replication, then you also need to configure
    some things to enable wsrep GTID mode. For example:\n# wsrep_gtid_mode=ON\n# wsrep_gtid_domain_id
    needs to be set to the same value on all nodes in a given cluster, so that each
    cluster node \n# uses the same domain when assigning GTIDs for Galera Cluster's
    write sets. Each cluster should have this set to a \n# different value, so that
    each cluster uses different domains when assigning GTIDs for their write sets.\n#
    log_slave_updates needs to be enabled on all nodes in the cluster. See MDEV-9855
    about that. \n# log_bin needs to be set to the same path on all nodes in the cluster.
    See MDEV-9856 about that.\n# And as an extra safety measure:\n#\n#    gtid_domain_id
    should be set to a different value on all nodes in a given cluster, and each of
    these values should \n# be different than the configured wsrep_gtid_domain_id
    value. This is to prevent a node from using the same domain used \n# for Galera
    Cluster's write sets when assigning GTIDs for non-Galera transactions, such as
    DDL executed with \n# wsrep_sst_method=RSU set or DML executed with wsrep_on=OFF
    set. \n\n## Caches and Limits\n##\ntmp_table_size=32M\nmax_heap_table_size=32M\n#
    Re-enabling as now works with Maria 10.1.2\nquery_cache_type=1\nquery_cache_limit=4M\nquery_cache_size=256M\nmax_connections=500\nthread_cache_size=50\nopen_files_limit=65535\ntable_definition_cache=4096\ntable_open_cache=4096\n\n##
    InnoDB\n##\ninnodb=FORCE\ninnodb_strict_mode=1\n# Mandatory per https://github.com/codership/documentation/issues/25\ninnodb_autoinc_lock_mode=2\n#
    Per https://www.percona.com/blog/2006/08/04/innodb-double-write/\ninnodb_doublewrite=1\ninnodb_flush_method=O_DIRECT\ninnodb_log_files_in_group=2\ninnodb_log_file_size=128M\ninnodb_flush_log_at_trx_commit=1\ninnodb_file_per_table=1\n#
    80% Memory is default reco.\n# Need to re-evaluate when DB size grows\ninnodb_buffer_pool_size=2G\ninnodb_file_format=Barracuda\n\n##
    Logging\n##\nlog_error=/opt/bitnami/mariadb/logs/mysqld.log\nslow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log\nlog_queries_not_using_indexes=1\nslow_query_log=1\n\n##
    SSL\n## Use extraVolumes and extraVolumeMounts to mount /certs filesystem\n# ssl_ca=/certs/ca.pem\n#
    ssl_cert=/certs/server-cert.pem\n# ssl_key=/certs/server-key.pem\n\n[galera]\n#
    https://mariadb.com/kb/en/configuring-mariadb-replication-between-two-mariadb-galera-clusters/\nwsrep_on=ON\nwsrep_provider=/opt/bitnami/mariadb/lib/libgalera_smm.so\nwsrep_sst_method=mariabackup\nwsrep_slave_threads=4\nwsrep_cluster_address=gcomm://\nwsrep_cluster_name=galera\nwsrep_sst_auth=\"root:\"\n#
    Enabled for performance per https://mariadb.com/kb/en/innodb-system-variables/#innodb_flush_log_at_trx_commit\ninnodb_flush_log_at_trx_commit=2\n#
    MYISAM REPLICATION SUPPORT #\nwsrep_replicate_myisam=ON\n\n[mariadb]\nplugin_load_add=auth_pam\n\n##
    Data-at-Rest Encryption\n## Use extraVolumes and extraVolumeMounts to mount /encryption
    filesystem\n# plugin_load_add=file_key_management\n# file_key_management_filename=/encryption/keyfile.enc\n#
    file_key_management_filekey=FILE:/encryption/keyfile.key\n# file_key_management_encryption_algorithm=AES_CTR\n#
    encrypt_binlog=ON\n# encrypt_tmp_files=ON\n\n## InnoDB/XtraDB Encryption\n# innodb_encrypt_tables=ON\n#
    innodb_encrypt_temporary_tables=ON\n# innodb_encrypt_log=ON\n# innodb_encryption_threads=4\n#
    innodb_encryption_rotate_key_age=1\n\n## Aria Encryption\n# aria_encrypt_tables=ON\n#
    encrypt_tmp_disk_tables=ON\n"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-configuration-sr3
  namespace: keycloak
---
apiVersion: v1
data:
  my.cnf: "[client]\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\nplugin_dir=/opt/bitnami/mariadb/plugin\n\n[mysqld]\ndefault_storage_engine=InnoDB\nbasedir=/opt/bitnami/mariadb\ndatadir=/bitnami/mariadb/data\nplugin_dir=/opt/bitnami/mariadb/plugin\ntmpdir=/opt/bitnami/mariadb/tmp\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\npid_file=/opt/bitnami/mariadb/tmp/mysqld.pid\nbind_address=0.0.0.0\n\n##
    Character set\n##\ncollation_server=utf8_unicode_ci\ninit_connect='SET NAMES utf8'\ncharacter_set_server=utf8\n\n##
    MyISAM\n##\nkey_buffer_size=32M\nmyisam_recover_options=FORCE,BACKUP\n\n## Safety\n##\nskip_host_cache\nskip_name_resolve\nmax_allowed_packet=16M\nmax_connect_errors=1000000\nsql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ONLY_FULL_GROUP_BY\nsysdate_is_now=1\n\n##
    Binary Logging\n##\nlog_bin=mysql-bin\nexpire_logs_days=14\n# Disabling for performance
    per http://severalnines.com/blog/9-tips-going-production-galera-cluster-mysql\nsync_binlog=0\n#
    Required for Galera\nbinlog_format=row\n\n# Sander updates for multi cluster replication\n#
    log_slave_updates=ON\n# Set server_id to the same value on all nodes in a given
    cluster, but be sure to use a different value in each cluster.\n\n# sander updates
    on GTID\n# If you want to use GTID replication, then you also need to configure
    some things to enable wsrep GTID mode. For example:\n# wsrep_gtid_mode=ON\n# wsrep_gtid_domain_id
    needs to be set to the same value on all nodes in a given cluster, so that each
    cluster node \n# uses the same domain when assigning GTIDs for Galera Cluster's
    write sets. Each cluster should have this set to a \n# different value, so that
    each cluster uses different domains when assigning GTIDs for their write sets.\n#
    log_slave_updates needs to be enabled on all nodes in the cluster. See MDEV-9855
    about that. \n# log_bin needs to be set to the same path on all nodes in the cluster.
    See MDEV-9856 about that.\n# And as an extra safety measure:\n#\n#    gtid_domain_id
    should be set to a different value on all nodes in a given cluster, and each of
    these values should \n# be different than the configured wsrep_gtid_domain_id
    value. This is to prevent a node from using the same domain used \n# for Galera
    Cluster's write sets when assigning GTIDs for non-Galera transactions, such as
    DDL executed with \n# wsrep_sst_method=RSU set or DML executed with wsrep_on=OFF
    set. \n\n## Caches and Limits\n##\ntmp_table_size=32M\nmax_heap_table_size=32M\n#
    Re-enabling as now works with Maria 10.1.2\nquery_cache_type=1\nquery_cache_limit=4M\nquery_cache_size=256M\nmax_connections=500\nthread_cache_size=50\nopen_files_limit=65535\ntable_definition_cache=4096\ntable_open_cache=4096\n\n##
    InnoDB\n##\ninnodb=FORCE\ninnodb_strict_mode=1\n# Mandatory per https://github.com/codership/documentation/issues/25\ninnodb_autoinc_lock_mode=2\n#
    Per https://www.percona.com/blog/2006/08/04/innodb-double-write/\ninnodb_doublewrite=1\ninnodb_flush_method=O_DIRECT\ninnodb_log_files_in_group=2\ninnodb_log_file_size=128M\ninnodb_flush_log_at_trx_commit=1\ninnodb_file_per_table=1\n#
    80% Memory is default reco.\n# Need to re-evaluate when DB size grows\ninnodb_buffer_pool_size=2G\ninnodb_file_format=Barracuda\n\n##
    Logging\n##\nlog_error=/opt/bitnami/mariadb/logs/mysqld.log\nslow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log\nlog_queries_not_using_indexes=1\nslow_query_log=1\n\n##
    SSL\n## Use extraVolumes and extraVolumeMounts to mount /certs filesystem\n# ssl_ca=/certs/ca.pem\n#
    ssl_cert=/certs/server-cert.pem\n# ssl_key=/certs/server-key.pem\n\n[galera]\n#
    https://mariadb.com/kb/en/configuring-mariadb-replication-between-two-mariadb-galera-clusters/\nwsrep_on=ON\nwsrep_provider=/opt/bitnami/mariadb/lib/libgalera_smm.so\nwsrep_sst_method=mariabackup\nwsrep_slave_threads=4\nwsrep_cluster_address=gcomm://\nwsrep_cluster_name=galera\nwsrep_sst_auth=\"root:\"\n#
    Enabled for performance per https://mariadb.com/kb/en/innodb-system-variables/#innodb_flush_log_at_trx_commit\ninnodb_flush_log_at_trx_commit=2\n#
    MYISAM REPLICATION SUPPORT #\nwsrep_replicate_myisam=ON\n\n[mariadb]\nplugin_load_add=auth_pam\n\n##
    Data-at-Rest Encryption\n## Use extraVolumes and extraVolumeMounts to mount /encryption
    filesystem\n# plugin_load_add=file_key_management\n# file_key_management_filename=/encryption/keyfile.enc\n#
    file_key_management_filekey=FILE:/encryption/keyfile.key\n# file_key_management_encryption_algorithm=AES_CTR\n#
    encrypt_binlog=ON\n# encrypt_tmp_files=ON\n\n## InnoDB/XtraDB Encryption\n# innodb_encrypt_tables=ON\n#
    innodb_encrypt_temporary_tables=ON\n# innodb_encrypt_log=ON\n# innodb_encryption_threads=4\n#
    innodb_encryption_rotate_key_age=1\n\n## Aria Encryption\n# aria_encrypt_tables=ON\n#
    encrypt_tmp_disk_tables=ON\n"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-configuration-sr6
  namespace: keycloak
---
apiVersion: v1
data:
  server-block.conf: "server {\n  listen 8443 ssl;\n\n  include /opt/bitnami/nginx/conf/mime.types;\n
    \ default_type application/octet-stream;\n  \n  ssl_certificate          /etc/server-cert-secret-volume/chain.pem;\n
    \ ssl_certificate_key      /etc/server-cert-secret-volume/key.pem;\n  # ssl_trusted_certificate
    \ /etc/server-cert-secret-volume/ca.pem;\n\n  # Enabling SSL session cache improves
    the performance of HTTPS websites. \n  # The following directives must be placed
    after ssl_trusted_certificate. \n  # They enable shared caching of size 20MB with
    a cache lifetime of 10 minutes.\n  ssl_session_cache shared:SSL:20m;\n  ssl_session_timeout
    10m;\n\n  # Specify the protocols and ciphers to be used in the SSL connection.
    \n  # Here we are allowing only TLS v1.3 and disabled insecure ciphers like MD5
    and DSS.\n  ssl_prefer_server_ciphers       on;\n  ssl_protocols TLSv1.3;\n  ssl_ciphers
    \ HIGH:!aNULL:!MD5:!DSS;\n\n  location / {\n    proxy_set_header Host $host;\n
    \   proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For
    $proxy_protocol_addr;\n    proxy_set_header X-Forwarded-Proto $scheme;\n\n    #
    When buffering of responses from the proxied server is enabled, limits the total
    size of \n    # buffers that can be busy sending a response to the client while
    the response is not yet \n    # fully read. In the meantime, the rest of the buffers
    can be used for reading the response \n    # and, if needed, buffering part of
    the response to a temporary file. By default, size is \n    # limited by the size
    of two buffers set by the proxy_buffer_size and proxy_buffers directives.\n    proxy_busy_buffers_size
    \  512k;\n\n    # Sets the number (4) and size (512k) of the buffers used for
    reading a response from the \n    # proxied server, for a single connection.\n
    \   proxy_buffers   4 512k;\n\n    # Sets the size of the buffer used for reading
    the first part of the response received from \n    # the proxied server. \n    proxy_buffer_size
    \  256k;\n\n    proxy_read_timeout 60;\n    proxy_connect_timeout 60;\n    proxy_send_timeout
    60;\n   \n    proxy_pass http://keycloak-http.keycloak.svc.cluster.local:80/;\n
    \ }\n}"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-server-block-sr3
  namespace: keycloak
---
apiVersion: v1
data:
  server-block.conf: "server {\n  listen 8443 ssl;\n\n  include /opt/bitnami/nginx/conf/mime.types;\n
    \ default_type application/octet-stream;\n  \n  ssl_certificate          /etc/server-cert-secret-volume/chain.pem;\n
    \ ssl_certificate_key      /etc/server-cert-secret-volume/key.pem;\n  # ssl_trusted_certificate
    \ /etc/server-cert-secret-volume/ca.pem;\n\n  # Enabling SSL session cache improves
    the performance of HTTPS websites. \n  # The following directives must be placed
    after ssl_trusted_certificate. \n  # They enable shared caching of size 20MB with
    a cache lifetime of 10 minutes.\n  ssl_session_cache shared:SSL:20m;\n  ssl_session_timeout
    10m;\n\n  # Specify the protocols and ciphers to be used in the SSL connection.
    \n  # Here we are allowing only TLS v1.3 and disabled insecure ciphers like MD5
    and DSS.\n  ssl_prefer_server_ciphers       on;\n  ssl_protocols TLSv1.3;\n  ssl_ciphers
    \ HIGH:!aNULL:!MD5:!DSS;\n\n  location / {\n    proxy_set_header Host $host;\n
    \   proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For
    $proxy_protocol_addr;\n    proxy_set_header X-Forwarded-Proto $scheme;\n\n    #
    When buffering of responses from the proxied server is enabled, limits the total
    size of \n    # buffers that can be busy sending a response to the client while
    the response is not yet \n    # fully read. In the meantime, the rest of the buffers
    can be used for reading the response \n    # and, if needed, buffering part of
    the response to a temporary file. By default, size is \n    # limited by the size
    of two buffers set by the proxy_buffer_size and proxy_buffers directives.\n    proxy_busy_buffers_size
    \  512k;\n\n    # Sets the number (4) and size (512k) of the buffers used for
    reading a response from the \n    # proxied server, for a single connection.\n
    \   proxy_buffers   4 512k;\n\n    # Sets the size of the buffer used for reading
    the first part of the response received from \n    # the proxied server. \n    proxy_buffer_size
    \  256k;\n\n    proxy_read_timeout 60;\n    proxy_connect_timeout 60;\n    proxy_send_timeout
    60;\n   \n    proxy_pass http://keycloak-http.keycloak.svc.cluster.local:80/;\n
    \ }\n}"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-server-block-sr6
  namespace: keycloak
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db
  namespace: keycloak
spec:
  ports:
  - appProtocol: mysql
    name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/name: mariadb-galera
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-headless
  namespace: keycloak
spec:
  clusterIP: None
  ports:
  - appProtocol: mysql
    name: galera
    port: 4567
    targetPort: galera
  - appProtocol: mysql
    name: ist
    port: 4568
    targetPort: ist
  - appProtocol: mysql
    name: sst
    port: 4444
    targetPort: sst
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/name: mariadb-galera
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: headless
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-headless
  namespace: keycloak
spec:
  clusterIP: None
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/name: keycloakx
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: http
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-http
  namespace: keycloak
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/name: keycloakx
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: keycloak-pool-sr3
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-sr3
  namespace: keycloak
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  selector:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/name: nginx
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: keycloak-pool-sr6
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-sr6
  namespace: keycloak
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  selector:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/name: nginx
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-keycloak-db-sr3-0
  namespace: keycloak
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: pv-grstgworker01-7
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-keycloak-db-sr3-1
  namespace: keycloak
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: pv-grstgworker03-7
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-keycloak-db-sr6-0
  namespace: keycloak
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: pv-grstgworker02-7
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-keycloak-db-sr6-1
  namespace: keycloak
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: pv-grstgworker04-7
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-sr3
  namespace: keycloak
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/name: nginx
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: "1"
        checksum/server-block-configuration: 614d71d34db55eaf9825b63588c0291743087c424e4294d1eb91507437e79686
        version/keycloak-server-cert-secret: v3
      labels:
        app.kubernetes.io/instance: nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nginx
        helm.sh/chart: nginx-13.2.24
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                  - test
                matchLabels:
                  app.kubernetes.io/instance: nginx
                  app.kubernetes.io/name: nginx
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - test
              matchLabels:
                app.kubernetes.io/instance: nginx
                app.kubernetes.io/name: nginx
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: NGINX_HTTP_PORT_NUMBER
          value: "8080"
        - name: NGINX_HTTPS_PORT_NUMBER
          value: "8443"
        image: docker.io/bitnami/nginx:1.23.3-debian-11-r17
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 5
        name: nginx
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - mountPath: /opt/bitnami/nginx/conf/server_blocks
          name: nginx-server-block
        - mountPath: /etc/server-cert-secret-volume
          name: server-cert-secret-volume
          readOnly: true
      hostIPC: false
      hostNetwork: false
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR3
      serviceAccountName: default
      shareProcessNamespace: false
      volumes:
      - configMap:
          name: nginx-server-block-sr3
        name: nginx-server-block
      - name: server-cert-secret-volume
        secret:
          secretName: keycloak-server-cert-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-sr6
  namespace: keycloak
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/name: nginx
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: "1"
        checksum/server-block-configuration: 614d71d34db55eaf9825b63588c0291743087c424e4294d1eb91507437e79686
        version/keycloak-server-cert-secret: v3
      labels:
        app.kubernetes.io/instance: nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nginx
        helm.sh/chart: nginx-13.2.24
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                  - test
                matchLabels:
                  app.kubernetes.io/instance: nginx
                  app.kubernetes.io/name: nginx
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - test
              matchLabels:
                app.kubernetes.io/instance: nginx
                app.kubernetes.io/name: nginx
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: NGINX_HTTP_PORT_NUMBER
          value: "8080"
        - name: NGINX_HTTPS_PORT_NUMBER
          value: "8443"
        image: docker.io/bitnami/nginx:1.23.3-debian-11-r17
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 5
        name: nginx
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - mountPath: /opt/bitnami/nginx/conf/server_blocks
          name: nginx-server-block
        - mountPath: /etc/server-cert-secret-volume
          name: server-cert-secret-volume
          readOnly: true
      hostIPC: false
      hostNetwork: false
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR6
      serviceAccountName: default
      shareProcessNamespace: false
      volumes:
      - configMap:
          name: nginx-server-block-sr6
        name: nginx-server-block
      - name: server-cert-secret-volume
        secret:
          secretName: keycloak-server-cert-secret
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-sr3
  namespace: keycloak
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: mariadb
      app.kubernetes.io/name: mariadb-galera
  serviceName: keycloak-db-headless
  template:
    metadata:
      annotations:
        version/keycloak-db-secret: v1
      labels:
        app.kubernetes.io/instance: mariadb
        app.kubernetes.io/name: mariadb-galera
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: mariadb
                  app.kubernetes.io/name: mariadb-galera
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - command:
        - bash
        - -ec
        - |
          # Bootstrap from the indicated node
          NODE_ID="${MY_POD_NAME#"keycloak-db-"}"
          if [[ "$NODE_ID" -eq "0" ]]; then
              export MARIADB_GALERA_CLUSTER_BOOTSTRAP=yes
              export MARIADB_GALERA_FORCE_SAFETOBOOTSTRAP=no
          else
              export MARIADB_GALERA_CLUSTER_BOOTSTRAP=no
          fi
          exec /opt/bitnami/scripts/mariadb-galera/entrypoint.sh /opt/bitnami/scripts/mariadb-galera/run.sh
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MARIADB_DEFAULT_PORT_NUMBER
          value: "3306"
        - name: MARIADB_GALERA_CLUSTER_NAME
          value: galera
        - name: MARIADB_GALERA_CLUSTER_ADDRESS
          value: gcomm://keycloak-db-sr3-0.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr3-1.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr6-0.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr6-1.keycloak-db-headless.keycloak.svc.cluster.local,
        - name: MARIADB_ROOT_USER
          value: root
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-root-password
              name: keycloak-db-secret
        - name: MARIADB_USER
          value: keycloak-admin
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: keycloak-db-secret
        - name: MARIADB_DATABASE
          value: keycloak
        - name: MARIADB_GALERA_MARIABACKUP_USER
          value: mariabackup
        - name: MARIADB_GALERA_MARIABACKUP_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-galera-mariabackup-password
              name: keycloak-db-secret
        - name: MARIADB_ENABLE_LDAP
          value: "no"
        - name: MARIADB_ENABLE_TLS
          value: "no"
        image: docker.io/bitnami/mariadb-galera:10.6.12-debian-11-r6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              exec mysql -u"${MARIADB_ROOT_USER}" -p"${password_aux}" -e "select * from mysql.wsrep_cluster_members;"
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: mariadb-galera
        ports:
        - containerPort: 3306
          name: mysql
        - containerPort: 4567
          name: galera
        - containerPort: 4568
          name: ist
        - containerPort: 4444
          name: sst
        readinessProbe:
          exec:
            command:
            - bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              exec mysqladmin status -u"${MARIADB_ROOT_USER}" -p"${password_aux}"
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /opt/bitnami/mariadb/.bootstrap
          name: previous-boot
        - mountPath: /bitnami/mariadb
          name: data
        - mountPath: /bitnami/conf/my.cnf
          name: mariadb-galera-config
          subPath: my.cnf
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR3
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: default
      volumes:
      - emptyDir: {}
        name: previous-boot
      - configMap:
          name: keycloak-db-configuration-sr3
        name: mariadb-galera-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        app.kubernetes.io/instance: mariadb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mariadb-galera
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: local-storage
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-sr6
  namespace: keycloak
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: mariadb
      app.kubernetes.io/name: mariadb-galera
  serviceName: keycloak-db-headless
  template:
    metadata:
      annotations:
        version/keycloak-db-secret: v1
      labels:
        app.kubernetes.io/instance: mariadb
        app.kubernetes.io/name: mariadb-galera
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: mariadb
                  app.kubernetes.io/name: mariadb-galera
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - command:
        - bash
        - -ec
        - |
          # Bootstrap from the indicated node
          NODE_ID="${MY_POD_NAME#"keycloak-db-"}"
          if [[ "$NODE_ID" -eq "0" ]]; then
              export MARIADB_GALERA_CLUSTER_BOOTSTRAP=yes
              export MARIADB_GALERA_FORCE_SAFETOBOOTSTRAP=no
          else
              export MARIADB_GALERA_CLUSTER_BOOTSTRAP=no
          fi
          exec /opt/bitnami/scripts/mariadb-galera/entrypoint.sh /opt/bitnami/scripts/mariadb-galera/run.sh
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MARIADB_DEFAULT_PORT_NUMBER
          value: "3306"
        - name: MARIADB_GALERA_CLUSTER_NAME
          value: galera
        - name: MARIADB_GALERA_CLUSTER_ADDRESS
          value: gcomm://keycloak-db-sr3-0.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr3-1.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr6-0.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr6-1.keycloak-db-headless.keycloak.svc.cluster.local,
        - name: MARIADB_ROOT_USER
          value: root
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-root-password
              name: keycloak-db-secret
        - name: MARIADB_USER
          value: keycloak-admin
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: keycloak-db-secret
        - name: MARIADB_DATABASE
          value: keycloak
        - name: MARIADB_GALERA_MARIABACKUP_USER
          value: mariabackup
        - name: MARIADB_GALERA_MARIABACKUP_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-galera-mariabackup-password
              name: keycloak-db-secret
        - name: MARIADB_ENABLE_LDAP
          value: "no"
        - name: MARIADB_ENABLE_TLS
          value: "no"
        image: docker.io/bitnami/mariadb-galera:10.6.12-debian-11-r6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              exec mysql -u"${MARIADB_ROOT_USER}" -p"${password_aux}" -e "select * from mysql.wsrep_cluster_members;"
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: mariadb-galera
        ports:
        - containerPort: 3306
          name: mysql
        - containerPort: 4567
          name: galera
        - containerPort: 4568
          name: ist
        - containerPort: 4444
          name: sst
        readinessProbe:
          exec:
            command:
            - bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              exec mysqladmin status -u"${MARIADB_ROOT_USER}" -p"${password_aux}"
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /opt/bitnami/mariadb/.bootstrap
          name: previous-boot
        - mountPath: /bitnami/mariadb
          name: data
        - mountPath: /bitnami/conf/my.cnf
          name: mariadb-galera-config
          subPath: my.cnf
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR6
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: default
      volumes:
      - emptyDir: {}
        name: previous-boot
      - configMap:
          name: keycloak-db-configuration-sr6
        name: mariadb-galera-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        app.kubernetes.io/instance: mariadb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mariadb-galera
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: local-storage
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-sr3
  namespace: keycloak
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloakx
  serviceName: keycloak-headless
  template:
    metadata:
      annotations:
        checksum/config-startup: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        version/keycloak-admin-secret: v1
        version/keycloak-db-secret: v1
      labels:
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/name: keycloakx
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                  - test
                matchLabels:
                  app.kubernetes.io/instance: keycloak
                  app.kubernetes.io/name: keycloakx
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - test
              matchLabels:
                app.kubernetes.io/instance: keycloak
                app.kubernetes.io/name: keycloakx
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --verbose
        - start
        - --spi-events-listener-jboss-logging-success-level=info
        - --spi-events-listener-jboss-logging-error-level=warn
        command:
        - /opt/keycloak/bin/kc.sh
        env:
        - name: KC_LOG_LEVEL
          value: INFO,io.quarkus.vertx.http:TRACE
        - name: KC_HOSTNAME_ADMIN
          value: grstgkeycloak.estpak.ee
        - name: KC_HOSTNAME
          value: grstgkeycloak.estpak.ee
        - name: KC_HTTP_RELATIVE_PATH
          value: /
        - name: KC_CACHE
          value: ispn
        - name: KC_CACHE_STACK
          value: kubernetes
        - name: KC_PROXY
          value: edge
        - name: KC_DB
          value: mariadb
        - name: KC_DB_URL_HOST
          value: keycloak-db.keycloak.svc.cluster.local
        - name: KC_DB_URL_PORT
          value: "3306"
        - name: KC_DB_URL_DATABASE
          value: keycloak
        - name: KC_DB_USERNAME
          value: keycloak-admin
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: keycloak-db-secret
        - name: KC_METRICS_ENABLED
          value: "true"
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_TRANSACTION_XA_ENABLED
          value: "false"
        - name: KC_HOSTNAME_PATH
          value: /
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_HTTP_PORT
          value: "8080"
        - name: KC_HOSTNAME_STRICT
          value: "true"
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "true"
        - name: KC_HOSTNAME_STRICT_BACKCHANNEL
          value: "false"
        - name: JAVA_OPTS_APPEND
          value: -XX:+UseContainerSupport -XX:MaxRAMPercentage=50.0 -Dcom.redhat.fips=false
            -Djgroups.dns.query=keycloak-headless.keycloak.svc.cluster.local
        envFrom:
        - secretRef:
            name: keycloak-admin-secret
        image: quay.io/keycloak/keycloak:20.0.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 0
          timeoutSeconds: 5
        name: keycloak
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 1
      enableServiceLinks: true
      initContainers:
      - command:
        - sh
        - -c
        - |
          echo 'Waiting for Database to become ready...'

          until printf "." && nc -z -w 2 keycloak-db.keycloak.svc.cluster.local 3306; do
              sleep 2;
          done;

          echo 'Database OK ✓'
        image: docker.io/busybox:1.32
        imagePullPolicy: IfNotPresent
        name: dbchecker
        resources:
          limits:
            cpu: 20m
            memory: 32Mi
          requests:
            cpu: 20m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR3
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      serviceAccountName: keycloak-sr3
      terminationGracePeriodSeconds: 60
  updateStrategy:
    type: RollingUpdate
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-sr6
  namespace: keycloak
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloakx
  serviceName: keycloak-headless
  template:
    metadata:
      annotations:
        checksum/config-startup: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        version/keycloak-admin-secret: v1
        version/keycloak-db-secret: v1
      labels:
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/name: keycloakx
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                  - test
                matchLabels:
                  app.kubernetes.io/instance: keycloak
                  app.kubernetes.io/name: keycloakx
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - test
              matchLabels:
                app.kubernetes.io/instance: keycloak
                app.kubernetes.io/name: keycloakx
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --verbose
        - start
        - --spi-events-listener-jboss-logging-success-level=info
        - --spi-events-listener-jboss-logging-error-level=warn
        command:
        - /opt/keycloak/bin/kc.sh
        env:
        - name: KC_LOG_LEVEL
          value: INFO,io.quarkus.vertx.http:TRACE
        - name: KC_HOSTNAME_ADMIN
          value: grstgkeycloak.estpak.ee
        - name: KC_HOSTNAME
          value: grstgkeycloak.estpak.ee
        - name: KC_HTTP_RELATIVE_PATH
          value: /
        - name: KC_CACHE
          value: ispn
        - name: KC_CACHE_STACK
          value: kubernetes
        - name: KC_PROXY
          value: edge
        - name: KC_DB
          value: mariadb
        - name: KC_DB_URL_HOST
          value: keycloak-db.keycloak.svc.cluster.local
        - name: KC_DB_URL_PORT
          value: "3306"
        - name: KC_DB_URL_DATABASE
          value: keycloak
        - name: KC_DB_USERNAME
          value: keycloak-admin
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: keycloak-db-secret
        - name: KC_METRICS_ENABLED
          value: "true"
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_TRANSACTION_XA_ENABLED
          value: "false"
        - name: KC_HOSTNAME_PATH
          value: /
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_HTTP_PORT
          value: "8080"
        - name: KC_HOSTNAME_STRICT
          value: "true"
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "true"
        - name: KC_HOSTNAME_STRICT_BACKCHANNEL
          value: "false"
        - name: JAVA_OPTS_APPEND
          value: -XX:+UseContainerSupport -XX:MaxRAMPercentage=50.0 -Dcom.redhat.fips=false
            -Djgroups.dns.query=keycloak-headless.keycloak.svc.cluster.local
        envFrom:
        - secretRef:
            name: keycloak-admin-secret
        image: quay.io/keycloak/keycloak:20.0.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 0
          timeoutSeconds: 5
        name: keycloak
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 1
      enableServiceLinks: true
      initContainers:
      - command:
        - sh
        - -c
        - |
          echo 'Waiting for Database to become ready...'

          until printf "." && nc -z -w 2 keycloak-db.keycloak.svc.cluster.local 3306; do
              sleep 2;
          done;

          echo 'Database OK ✓'
        image: docker.io/busybox:1.32
        imagePullPolicy: IfNotPresent
        name: dbchecker
        resources:
          limits:
            cpu: 20m
            memory: 32Mi
          requests:
            cpu: 20m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR6
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      serviceAccountName: keycloak-sr6
      terminationGracePeriodSeconds: 60
  updateStrategy:
    type: RollingUpdate
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  creationTimestamp: null
  name: keycloak-admin-secret
  namespace: keycloak
spec:
  encryptedData:
    KEYCLOAK_ADMIN: AgC6meD782vG2XRDjnbiDR2PZz5ctiYMvEh7zI16XDkSSuE6FvB0uRlJunHroEvTF9AiqrHCsPr1fq5srkLArcJrEoM6Ev38srHEq1rmAmTg8VbXk/Skt1z2xivLaUKlm+MyQSNQxOShFmgoYCokQxMWfdbVloP1y8bHHBuih7XrJe/Hz90y91yVuoLHlYHHcz4jl7iaN/nsBK7oqglZekW9u38ynA98dV8vCBPmJ6FhKza+VnBMm7ieNDdm39C7H+afd/VY2BLGEvR0Y+TemrMLR7CfAF4CAt6RE7Y0ottX7UZUFNvJFynZD0xgJHzzOvvt5g+Wfm9WScBJ1MINgYhYUI7oG2VKBCn1TyJZGBjhemprlAjvx6S6L03uQFEHQMVatjRrYkRXi8P8pngKyP28V6YbYSov2I3oaeaAjf3T6UApHSROeSynr0HkgMTXtjGcoA2u3HNXFuhmSYn9efU4UjZgHlulWcU7h1r4TeHi6SeHw61++Nraf97dvBSKDn5JycTt1Zqo8XDfyfH7lT/riIJAfq9FZ7qeNIpC7hRXymyz1FaznYNJK5HqoMWXf2Dx4dE4hloJWCzyu1k5ZWNeZGlnRWk9rhKztpw/GTxqOGK7qiOkZLjaL+taZfzD8gkmMNJHLummaUn0m0j4QSHZQSr98rTi2uXCKkQTH017AD08Be3LluLw+yt9xZ5Q3dyho9fnpQ==
    KEYCLOAK_ADMIN_PASSWORD: AgCe5eqrSg9CF2gZ3KEzq9COgDImByRykK/5oopeF/Dc0iNZGUfuZfJK+beEoTg6DVwwrPUrpoyqkI8gri0CPMvmrxU4N1udlt3L3HdKeEZJxIOef1ZgUCpC1tjL1u680IRLnLtWpTl/ZQklZ9lV+l/aW0CUZ1plA13+0nOg+ENSvCTg3TWNYgSa6JctduVWENPyuX5pj1bWyxgJreO+tQ9b/NgQ9YS4u+k7l1JX/0B3sl1XJc3EMURDwWYnNAGrOIjTnn7m/6im8iFq3qRBzRUx91fsr8LKqTVOdSZ+DJFB4txVFiMLkapeMm/u/g/6exHg46k3IvI0oaKNJ4ms82S6352hnHk5OQi2TBr1nya+lMV1gXdMbIFzR1//aUcX6216DyTOdGYg+igcWovOr3IYkNG7yTRCl0AwMkd14L7JOh+/9/J7BG34hqUh7Lt2HoMPLAQhfG2fV+/gDJWyTIUjD1ydExt68rMbaKE1mWfaf9Uz3fPrQuLic0dObURKtpWaJ1lw3lm31BbapIpxHIzScZX2/aRZD8iGmKsc0WCgGY0jhPQYt1AjXvXJ0tTN91Qtvs43+lDG1JstTe0a7eeRZ5xgIBWBuKJm+1Z/45MhMrbz3AKufjBuXrg2W0jR5SeabQUb+49oYx1AZSgn9d94/uV8X7qdEgFOSfnlJnY62TEvBS/G4q0Xh+ZcMWoBVtB3belJkoEdQAXVNTCkyhvdFQs=
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: "true"
        version/keycloak-admin-secret: v1
      creationTimestamp: null
      name: keycloak-admin-secret
      namespace: keycloak
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  creationTimestamp: null
  name: keycloak-db-secret
  namespace: keycloak
spec:
  encryptedData:
    mariadb-galera-mariabackup-password: AgCSe0jR4OeBBqV+39ILoTQhbHZnXymwhwyiUtme+gx6O6dklHEwRo5UWGJSslRMymzJbeJ+reccE9VeyO4niiDGyxuIeot6qazKHBPXUJqqMNC1BfnhEAMINm2wwVmrNfdGkz13xrm1m4QpQD6vYZ20zJlsPD3i5B/RFlgPjdoo/48rz/AVoQA2PzYofi72nsuf41k0oPqRKUkYaw87nhjEdPBZw85wMihy5ZBCH71TpW9QVNtnIxIr37FtnW0p0OKeAbw5pg34JAwz22vB7fOImFgFWXydvm2XI4u0eBh+8Eb+pUMfhFvdcNWX1mPd9z8yfPsNi/7cXnVaEaot2X2uNzBbCJTWwVDzl1aiZlY3I7LAElMEBFZYCKNxmMB2FvxMx1HLSRHQ0by/+b6b8dayK0xnOo5OSRp9WGmBf5B6/zBSvtsP7zAkaLkpqUEHLnJ7NTscQr5gfqhLlMI2emZEmlmFPhAfU2ZoBrxftUR0JBvLkDcjjopRA62RnRds6UrrRm/GHmgr3eWj9sq5ibeOPRxJfztOd5yRDt1BtignaMDddgJyXQaNnXLdF6LUY1uIxyVnwCFUnZt9gQO2mElYHgHt4SgSsADOblHBlnWSnxTtQxvMwJLCPdB6XK47y8guu4Ns0ZOehZ5XIdJwo05ow3CaRXzmbFoHv0Q9HpEZICRoL8U2/lSQGdEQ4vxez7Oy5iOPgtJoiLdBFn5HldsJ
    mariadb-password: AgCXwXaNRDSHymjTqq7WDr4gprXhtkpQWRBRHNyxirmXWJmFH2QV9dn90EYbjYGaUOjEKTdjLlbWxQHVhnGlG1h97E9pPuW3tDfaCB11I5QsLYtU35JrHpFFCCQ6I6W3NHFNGJJ1uUg/+YNwa7ELpOnysfTouzwRBWf//UX98I5Cc8LRWAw7XbNgb4kuNItdtJhsvf0iR3eUc0vtTo3T820bj3m6nJa7O49iKMpsS1a/qRka5YyXm459wGkJyM1ucVR6tuOM5Pb7rF+9sbLQYu4sPMy0xA8mSIwvy33zDWXC7COAWj1Ouq0fLEXOYJiZ+LsCtbjRyNhuB7BQKix5ItZmZ07QWo8+EVothfdIetJAzj1Fii3gH2ttS+yGK7XoQS/uu+/zARPbhfyF1OYIkkVIggyPfvhcU/uyPVTgtT/+ziI/nPYHYnBOsRMBTT8Hyl3Xs6AfPUUepLgAjGOUI5rA19SIxb0U4P18uZ3BhppXhwYmDZpio7eDNt/ANVufJTHIcvIq+dILNzdFuIo6nSgzQksnnFq1KFZdr255dyMfJtsoKUEvaENuW1L2puAxkZOmQM3948Tl7YoBBL2ygfz1Ls6fM31BBJLWWiVUJIFJ7T7XONF6towfHtB+AQCtG6M1a8MBxHSrYuCpX/rma0qFc6Tfiq50ThxFk3rHif2Ws1aBafOzwr+i4o6M5dOeuxRT7G/B7Mfw0Tm8fU6eMv4=
    mariadb-root-password: AgDPHFgvCoI75jXIUAdwkqasT95X6B3Jxn8JL63HQPE4uxU8qPA5MIilwOLkEfslvTqTxvOYv3ppixXVBaMbd4JlnxU9p3J4PuyuMSuQwwXmD1Vnyq+ug23gZsj9mrVeRvZ2PDRrVgq84jC87638q6Ll+7mipu5nX0l6mEHCajyHm5DTunHOVu2TAvtxvw/JMAaUUoxuMvOesJ7xUp9UPlQjMJKw9kzpvU314Qk9eYLPJSO/qe98nl7MOBO7KXLMcbPBlKscl8cYCetughulu1+f+hxzooSHirWICPbrvQVJl43mRRLouC/SD+wupe1WiAdnLa6H00hNiGmu2yZdVPxQMglfGoJayzIXxLKLlrCFWD/sIREQXIHv65SF6vQjnagWp7v1W3AqU8dIHRs0uVAfjFfms2Ru9WqNUGVg5ckDaxEhGfWzTBm8Xx1OhfSiHaqF8JL5nrACkgWQfLVsisXoLOQjgcQ85bcvWjSPFZW48PWBz/g8nohnILcYvsrFFB1PzPTBIy4doornpiPwHSEX+BxaNkD201z8WxchsW5ASJcfaC71rLHR8ylSO1WM6kSApCx6bile3wJmsPYFSwACtMN5Y8+cRTD4K1OZfBN5nmT7iqGBxNdjN9rl4qm5XulghwxulTilf479FqNzkr/OXzJTsbLaIWHC7mZEOxmbTHEwIgJ61w55KlwUPK4SKgtBoys51cQox7VK6VzcEBl8xJrw
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: "true"
        version/keycloak-db-secret: v1
      creationTimestamp: null
      name: keycloak-db-secret
      namespace: keycloak
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  creationTimestamp: null
  name: keycloak-server-cert-secret
  namespace: keycloak
spec:
  encryptedData:
    ca.pem: 
    cert.pem: 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
    chain.pem: 
    key.pem: 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
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: 0
        sealedsecrets.bitnami.com/cluster-wide: "true"
        version/keycloak-server-cert-secret: v3
      creationTimestamp: null
      name: keycloak-server-cert-secret
      namespace: keycloak
    type: Opaque
---
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: keycloak-pool-sr3
  namespace: metallb-system
spec:
  addresses:
  - 90.190.54.233/32
  autoAssign: true
  avoidBuggyIPs: true
---
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: keycloak-pool-sr6
  namespace: metallb-system
spec:
  addresses:
  - 194.106.115.169/32
  autoAssign: true
  avoidBuggyIPs: true
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: keycloak-pool-sr3
  namespace: metallb-system
spec:
  ipAddressPools:
  - keycloak-pool-sr3
  nodeSelectors:
  - matchLabels:
      topology.kubernetes.io/zone: SR3
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: keycloak-pool-sr6
  namespace: metallb-system
spec:
  ipAddressPools:
  - keycloak-pool-sr6
  nodeSelectors:
  - matchLabels:
      topology.kubernetes.io/zone: SR6
