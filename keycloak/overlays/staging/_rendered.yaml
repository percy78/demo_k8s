apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets: []
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-sr3
  namespace: keycloak
---
apiVersion: v1
automountServiceAccountToken: true
imagePullSecrets: []
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-sr6
  namespace: keycloak
---
apiVersion: v1
data:
  my.cnf: "[client]\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\nplugin_dir=/opt/bitnami/mariadb/plugin\n\n[mysqld]\ndefault_storage_engine=InnoDB\nbasedir=/opt/bitnami/mariadb\ndatadir=/bitnami/mariadb/data\nplugin_dir=/opt/bitnami/mariadb/plugin\ntmpdir=/opt/bitnami/mariadb/tmp\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\npid_file=/opt/bitnami/mariadb/tmp/mysqld.pid\nbind_address=0.0.0.0\n\n##
    Character set\n##\ncollation_server=utf8_unicode_ci\ninit_connect='SET NAMES utf8'\ncharacter_set_server=utf8\n\n##
    MyISAM\n##\nkey_buffer_size=32M\nmyisam_recover_options=FORCE,BACKUP\n\n## Safety\n##\nskip_host_cache\nskip_name_resolve\nmax_allowed_packet=16M\nmax_connect_errors=1000000\nsql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ONLY_FULL_GROUP_BY\nsysdate_is_now=1\n\n##
    Binary Logging\n##\nlog_bin=mysql-bin\nexpire_logs_days=14\n# Disabling for performance
    per http://severalnines.com/blog/9-tips-going-production-galera-cluster-mysql\nsync_binlog=0\n#
    Required for Galera\nbinlog_format=row\n\n# Sander updates for multi cluster replication\n#
    log_slave_updates=ON\n# Set server_id to the same value on all nodes in a given
    cluster, but be sure to use a different value in each cluster.\n\n# sander updates
    on GTID\n# If you want to use GTID replication, then you also need to configure
    some things to enable wsrep GTID mode. For example:\n# wsrep_gtid_mode=ON\n# wsrep_gtid_domain_id
    needs to be set to the same value on all nodes in a given cluster, so that each
    cluster node \n# uses the same domain when assigning GTIDs for Galera Cluster's
    write sets. Each cluster should have this set to a \n# different value, so that
    each cluster uses different domains when assigning GTIDs for their write sets.\n#
    log_slave_updates needs to be enabled on all nodes in the cluster. See MDEV-9855
    about that. \n# log_bin needs to be set to the same path on all nodes in the cluster.
    See MDEV-9856 about that.\n# And as an extra safety measure:\n#\n#    gtid_domain_id
    should be set to a different value on all nodes in a given cluster, and each of
    these values should \n# be different than the configured wsrep_gtid_domain_id
    value. This is to prevent a node from using the same domain used \n# for Galera
    Cluster's write sets when assigning GTIDs for non-Galera transactions, such as
    DDL executed with \n# wsrep_sst_method=RSU set or DML executed with wsrep_on=OFF
    set. \n\n## Caches and Limits\n##\ntmp_table_size=32M\nmax_heap_table_size=32M\n#
    Re-enabling as now works with Maria 10.1.2\nquery_cache_type=1\nquery_cache_limit=4M\nquery_cache_size=256M\nmax_connections=500\nthread_cache_size=50\nopen_files_limit=65535\ntable_definition_cache=4096\ntable_open_cache=4096\n\n##
    InnoDB\n##\ninnodb=FORCE\ninnodb_strict_mode=1\n# Mandatory per https://github.com/codership/documentation/issues/25\ninnodb_autoinc_lock_mode=2\n#
    Per https://www.percona.com/blog/2006/08/04/innodb-double-write/\ninnodb_doublewrite=1\ninnodb_flush_method=O_DIRECT\ninnodb_log_files_in_group=2\ninnodb_log_file_size=128M\ninnodb_flush_log_at_trx_commit=1\ninnodb_file_per_table=1\n#
    80% Memory is default reco.\n# Need to re-evaluate when DB size grows\ninnodb_buffer_pool_size=2G\ninnodb_file_format=Barracuda\n\n##
    Logging\n##\nlog_error=/opt/bitnami/mariadb/logs/mysqld.log\nslow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log\nlog_queries_not_using_indexes=1\nslow_query_log=1\n\n##
    SSL\n## Use extraVolumes and extraVolumeMounts to mount /certs filesystem\n# ssl_ca=/certs/ca.pem\n#
    ssl_cert=/certs/server-cert.pem\n# ssl_key=/certs/server-key.pem\n\n[galera]\n#
    https://mariadb.com/kb/en/configuring-mariadb-replication-between-two-mariadb-galera-clusters/\nwsrep_on=ON\nwsrep_provider=/opt/bitnami/mariadb/lib/libgalera_smm.so\nwsrep_sst_method=mariabackup\nwsrep_slave_threads=4\nwsrep_cluster_address=gcomm://\nwsrep_cluster_name=galera\nwsrep_sst_auth=\"root:\"\n#
    Enabled for performance per https://mariadb.com/kb/en/innodb-system-variables/#innodb_flush_log_at_trx_commit\ninnodb_flush_log_at_trx_commit=2\n#
    MYISAM REPLICATION SUPPORT #\nwsrep_replicate_myisam=ON\n\n[mariadb]\nplugin_load_add=auth_pam\n\n##
    Data-at-Rest Encryption\n## Use extraVolumes and extraVolumeMounts to mount /encryption
    filesystem\n# plugin_load_add=file_key_management\n# file_key_management_filename=/encryption/keyfile.enc\n#
    file_key_management_filekey=FILE:/encryption/keyfile.key\n# file_key_management_encryption_algorithm=AES_CTR\n#
    encrypt_binlog=ON\n# encrypt_tmp_files=ON\n\n## InnoDB/XtraDB Encryption\n# innodb_encrypt_tables=ON\n#
    innodb_encrypt_temporary_tables=ON\n# innodb_encrypt_log=ON\n# innodb_encryption_threads=4\n#
    innodb_encryption_rotate_key_age=1\n\n## Aria Encryption\n# aria_encrypt_tables=ON\n#
    encrypt_tmp_disk_tables=ON\n"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-configuration-sr3
  namespace: keycloak
---
apiVersion: v1
data:
  my.cnf: "[client]\nport=3306\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\nplugin_dir=/opt/bitnami/mariadb/plugin\n\n[mysqld]\ndefault_storage_engine=InnoDB\nbasedir=/opt/bitnami/mariadb\ndatadir=/bitnami/mariadb/data\nplugin_dir=/opt/bitnami/mariadb/plugin\ntmpdir=/opt/bitnami/mariadb/tmp\nsocket=/opt/bitnami/mariadb/tmp/mysql.sock\npid_file=/opt/bitnami/mariadb/tmp/mysqld.pid\nbind_address=0.0.0.0\n\n##
    Character set\n##\ncollation_server=utf8_unicode_ci\ninit_connect='SET NAMES utf8'\ncharacter_set_server=utf8\n\n##
    MyISAM\n##\nkey_buffer_size=32M\nmyisam_recover_options=FORCE,BACKUP\n\n## Safety\n##\nskip_host_cache\nskip_name_resolve\nmax_allowed_packet=16M\nmax_connect_errors=1000000\nsql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ONLY_FULL_GROUP_BY\nsysdate_is_now=1\n\n##
    Binary Logging\n##\nlog_bin=mysql-bin\nexpire_logs_days=14\n# Disabling for performance
    per http://severalnines.com/blog/9-tips-going-production-galera-cluster-mysql\nsync_binlog=0\n#
    Required for Galera\nbinlog_format=row\n\n# Sander updates for multi cluster replication\n#
    log_slave_updates=ON\n# Set server_id to the same value on all nodes in a given
    cluster, but be sure to use a different value in each cluster.\n\n# sander updates
    on GTID\n# If you want to use GTID replication, then you also need to configure
    some things to enable wsrep GTID mode. For example:\n# wsrep_gtid_mode=ON\n# wsrep_gtid_domain_id
    needs to be set to the same value on all nodes in a given cluster, so that each
    cluster node \n# uses the same domain when assigning GTIDs for Galera Cluster's
    write sets. Each cluster should have this set to a \n# different value, so that
    each cluster uses different domains when assigning GTIDs for their write sets.\n#
    log_slave_updates needs to be enabled on all nodes in the cluster. See MDEV-9855
    about that. \n# log_bin needs to be set to the same path on all nodes in the cluster.
    See MDEV-9856 about that.\n# And as an extra safety measure:\n#\n#    gtid_domain_id
    should be set to a different value on all nodes in a given cluster, and each of
    these values should \n# be different than the configured wsrep_gtid_domain_id
    value. This is to prevent a node from using the same domain used \n# for Galera
    Cluster's write sets when assigning GTIDs for non-Galera transactions, such as
    DDL executed with \n# wsrep_sst_method=RSU set or DML executed with wsrep_on=OFF
    set. \n\n## Caches and Limits\n##\ntmp_table_size=32M\nmax_heap_table_size=32M\n#
    Re-enabling as now works with Maria 10.1.2\nquery_cache_type=1\nquery_cache_limit=4M\nquery_cache_size=256M\nmax_connections=500\nthread_cache_size=50\nopen_files_limit=65535\ntable_definition_cache=4096\ntable_open_cache=4096\n\n##
    InnoDB\n##\ninnodb=FORCE\ninnodb_strict_mode=1\n# Mandatory per https://github.com/codership/documentation/issues/25\ninnodb_autoinc_lock_mode=2\n#
    Per https://www.percona.com/blog/2006/08/04/innodb-double-write/\ninnodb_doublewrite=1\ninnodb_flush_method=O_DIRECT\ninnodb_log_files_in_group=2\ninnodb_log_file_size=128M\ninnodb_flush_log_at_trx_commit=1\ninnodb_file_per_table=1\n#
    80% Memory is default reco.\n# Need to re-evaluate when DB size grows\ninnodb_buffer_pool_size=2G\ninnodb_file_format=Barracuda\n\n##
    Logging\n##\nlog_error=/opt/bitnami/mariadb/logs/mysqld.log\nslow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log\nlog_queries_not_using_indexes=1\nslow_query_log=1\n\n##
    SSL\n## Use extraVolumes and extraVolumeMounts to mount /certs filesystem\n# ssl_ca=/certs/ca.pem\n#
    ssl_cert=/certs/server-cert.pem\n# ssl_key=/certs/server-key.pem\n\n[galera]\n#
    https://mariadb.com/kb/en/configuring-mariadb-replication-between-two-mariadb-galera-clusters/\nwsrep_on=ON\nwsrep_provider=/opt/bitnami/mariadb/lib/libgalera_smm.so\nwsrep_sst_method=mariabackup\nwsrep_slave_threads=4\nwsrep_cluster_address=gcomm://\nwsrep_cluster_name=galera\nwsrep_sst_auth=\"root:\"\n#
    Enabled for performance per https://mariadb.com/kb/en/innodb-system-variables/#innodb_flush_log_at_trx_commit\ninnodb_flush_log_at_trx_commit=2\n#
    MYISAM REPLICATION SUPPORT #\nwsrep_replicate_myisam=ON\n\n[mariadb]\nplugin_load_add=auth_pam\n\n##
    Data-at-Rest Encryption\n## Use extraVolumes and extraVolumeMounts to mount /encryption
    filesystem\n# plugin_load_add=file_key_management\n# file_key_management_filename=/encryption/keyfile.enc\n#
    file_key_management_filekey=FILE:/encryption/keyfile.key\n# file_key_management_encryption_algorithm=AES_CTR\n#
    encrypt_binlog=ON\n# encrypt_tmp_files=ON\n\n## InnoDB/XtraDB Encryption\n# innodb_encrypt_tables=ON\n#
    innodb_encrypt_temporary_tables=ON\n# innodb_encrypt_log=ON\n# innodb_encryption_threads=4\n#
    innodb_encryption_rotate_key_age=1\n\n## Aria Encryption\n# aria_encrypt_tables=ON\n#
    encrypt_tmp_disk_tables=ON\n"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-configuration-sr6
  namespace: keycloak
---
apiVersion: v1
data:
  server-block.conf: "server {\n  listen 8443 ssl;\n\n  include /opt/bitnami/nginx/conf/mime.types;\n
    \ default_type application/octet-stream;\n  \n  ssl_certificate          /etc/server-cert-secret-volume/chain.pem;\n
    \ ssl_certificate_key      /etc/server-cert-secret-volume/key.pem;\n  # ssl_trusted_certificate
    \ /etc/server-cert-secret-volume/ca.pem;\n\n  # Enabling SSL session cache improves
    the performance of HTTPS websites. \n  # The following directives must be placed
    after ssl_trusted_certificate. \n  # They enable shared caching of size 20MB with
    a cache lifetime of 10 minutes.\n  ssl_session_cache shared:SSL:20m;\n  ssl_session_timeout
    10m;\n\n  # Specify the protocols and ciphers to be used in the SSL connection.
    \n  # Here we are allowing only TLS v1.3 and disabled insecure ciphers like MD5
    and DSS.\n  ssl_prefer_server_ciphers       on;\n  ssl_protocols TLSv1.3;\n  ssl_ciphers
    \ HIGH:!aNULL:!MD5:!DSS;\n\n  location / {\n    proxy_set_header Host $host;\n
    \   proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For
    $proxy_protocol_addr;\n    proxy_set_header X-Forwarded-Proto $scheme;\n\n    #
    When buffering of responses from the proxied server is enabled, limits the total
    size of \n    # buffers that can be busy sending a response to the client while
    the response is not yet \n    # fully read. In the meantime, the rest of the buffers
    can be used for reading the response \n    # and, if needed, buffering part of
    the response to a temporary file. By default, size is \n    # limited by the size
    of two buffers set by the proxy_buffer_size and proxy_buffers directives.\n    proxy_busy_buffers_size
    \  512k;\n\n    # Sets the number (4) and size (512k) of the buffers used for
    reading a response from the \n    # proxied server, for a single connection.\n
    \   proxy_buffers   4 512k;\n\n    # Sets the size of the buffer used for reading
    the first part of the response received from \n    # the proxied server. \n    proxy_buffer_size
    \  256k;\n\n    proxy_read_timeout 60;\n    proxy_connect_timeout 60;\n    proxy_send_timeout
    60;\n   \n    proxy_pass http://keycloak-http.keycloak.svc.cluster.local:80/;\n
    \ }\n}"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-server-block-sr3
  namespace: keycloak
---
apiVersion: v1
data:
  server-block.conf: "server {\n  listen 8443 ssl;\n\n  include /opt/bitnami/nginx/conf/mime.types;\n
    \ default_type application/octet-stream;\n  \n  ssl_certificate          /etc/server-cert-secret-volume/chain.pem;\n
    \ ssl_certificate_key      /etc/server-cert-secret-volume/key.pem;\n  # ssl_trusted_certificate
    \ /etc/server-cert-secret-volume/ca.pem;\n\n  # Enabling SSL session cache improves
    the performance of HTTPS websites. \n  # The following directives must be placed
    after ssl_trusted_certificate. \n  # They enable shared caching of size 20MB with
    a cache lifetime of 10 minutes.\n  ssl_session_cache shared:SSL:20m;\n  ssl_session_timeout
    10m;\n\n  # Specify the protocols and ciphers to be used in the SSL connection.
    \n  # Here we are allowing only TLS v1.3 and disabled insecure ciphers like MD5
    and DSS.\n  ssl_prefer_server_ciphers       on;\n  ssl_protocols TLSv1.3;\n  ssl_ciphers
    \ HIGH:!aNULL:!MD5:!DSS;\n\n  location / {\n    proxy_set_header Host $host;\n
    \   proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For
    $proxy_protocol_addr;\n    proxy_set_header X-Forwarded-Proto $scheme;\n\n    #
    When buffering of responses from the proxied server is enabled, limits the total
    size of \n    # buffers that can be busy sending a response to the client while
    the response is not yet \n    # fully read. In the meantime, the rest of the buffers
    can be used for reading the response \n    # and, if needed, buffering part of
    the response to a temporary file. By default, size is \n    # limited by the size
    of two buffers set by the proxy_buffer_size and proxy_buffers directives.\n    proxy_busy_buffers_size
    \  512k;\n\n    # Sets the number (4) and size (512k) of the buffers used for
    reading a response from the \n    # proxied server, for a single connection.\n
    \   proxy_buffers   4 512k;\n\n    # Sets the size of the buffer used for reading
    the first part of the response received from \n    # the proxied server. \n    proxy_buffer_size
    \  256k;\n\n    proxy_read_timeout 60;\n    proxy_connect_timeout 60;\n    proxy_send_timeout
    60;\n   \n    proxy_pass http://keycloak-http.keycloak.svc.cluster.local:80/;\n
    \ }\n}"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-server-block-sr6
  namespace: keycloak
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db
  namespace: keycloak
spec:
  ports:
  - appProtocol: mysql
    name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/name: mariadb-galera
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-headless
  namespace: keycloak
spec:
  clusterIP: None
  ports:
  - appProtocol: mysql
    name: galera
    port: 4567
    targetPort: galera
  - appProtocol: mysql
    name: ist
    port: 4568
    targetPort: ist
  - appProtocol: mysql
    name: sst
    port: 4444
    targetPort: sst
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/name: mariadb-galera
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: headless
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-headless
  namespace: keycloak
spec:
  clusterIP: None
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/name: keycloakx
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: http
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-http
  namespace: keycloak
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/name: keycloakx
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: keycloak-pool-sr3
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-sr3
  namespace: keycloak
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  selector:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/name: nginx
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: keycloak-pool-sr6
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-sr6
  namespace: keycloak
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  selector:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/name: nginx
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-keycloak-db-sr3-0
  namespace: keycloak
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: pv-grstgworker01-7
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-keycloak-db-sr3-1
  namespace: keycloak
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: pv-grstgworker03-7
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-keycloak-db-sr6-0
  namespace: keycloak
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: pv-grstgworker02-7
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-keycloak-db-sr6-1
  namespace: keycloak
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: pv-grstgworker04-7
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-sr3
  namespace: keycloak
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/name: nginx
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: "1"
        checksum/server-block-configuration: 614d71d34db55eaf9825b63588c0291743087c424e4294d1eb91507437e79686
        version/keycloak-server-cert-secret: v1
      labels:
        app.kubernetes.io/instance: nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nginx
        helm.sh/chart: nginx-13.2.24
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                  - test
                matchLabels:
                  app.kubernetes.io/instance: nginx
                  app.kubernetes.io/name: nginx
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - test
              matchLabels:
                app.kubernetes.io/instance: nginx
                app.kubernetes.io/name: nginx
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: NGINX_HTTP_PORT_NUMBER
          value: "8080"
        - name: NGINX_HTTPS_PORT_NUMBER
          value: "8443"
        image: docker.io/bitnami/nginx:1.23.3-debian-11-r17
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 5
        name: nginx
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - mountPath: /opt/bitnami/nginx/conf/server_blocks
          name: nginx-server-block
        - mountPath: /etc/server-cert-secret-volume
          name: server-cert-secret-volume
          readOnly: true
      hostIPC: false
      hostNetwork: false
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR3
      serviceAccountName: default
      shareProcessNamespace: false
      volumes:
      - configMap:
          name: nginx-server-block-sr3
        name: nginx-server-block
      - name: server-cert-secret-volume
        secret:
          secretName: keycloak-server-cert-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-13.2.24
  name: nginx-sr6
  namespace: keycloak
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/name: nginx
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: "1"
        checksum/server-block-configuration: 614d71d34db55eaf9825b63588c0291743087c424e4294d1eb91507437e79686
        version/keycloak-server-cert-secret: v1
      labels:
        app.kubernetes.io/instance: nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nginx
        helm.sh/chart: nginx-13.2.24
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                  - test
                matchLabels:
                  app.kubernetes.io/instance: nginx
                  app.kubernetes.io/name: nginx
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - test
              matchLabels:
                app.kubernetes.io/instance: nginx
                app.kubernetes.io/name: nginx
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: NGINX_HTTP_PORT_NUMBER
          value: "8080"
        - name: NGINX_HTTPS_PORT_NUMBER
          value: "8443"
        image: docker.io/bitnami/nginx:1.23.3-debian-11-r17
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 5
        name: nginx
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - mountPath: /opt/bitnami/nginx/conf/server_blocks
          name: nginx-server-block
        - mountPath: /etc/server-cert-secret-volume
          name: server-cert-secret-volume
          readOnly: true
      hostIPC: false
      hostNetwork: false
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR6
      serviceAccountName: default
      shareProcessNamespace: false
      volumes:
      - configMap:
          name: nginx-server-block-sr6
        name: nginx-server-block
      - name: server-cert-secret-volume
        secret:
          secretName: keycloak-server-cert-secret
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-sr3
  namespace: keycloak
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: mariadb
      app.kubernetes.io/name: mariadb-galera
  serviceName: keycloak-db-headless
  template:
    metadata:
      annotations:
        version/keycloak-db-secret: v1
      labels:
        app.kubernetes.io/instance: mariadb
        app.kubernetes.io/name: mariadb-galera
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: mariadb
                  app.kubernetes.io/name: mariadb-galera
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - command:
        - bash
        - -ec
        - |
          exec /opt/bitnami/scripts/mariadb-galera/entrypoint.sh /opt/bitnami/scripts/mariadb-galera/run.sh
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MARIADB_DEFAULT_PORT_NUMBER
          value: "3306"
        - name: MARIADB_GALERA_CLUSTER_NAME
          value: galera
        - name: MARIADB_GALERA_CLUSTER_ADDRESS
          value: gcomm://keycloak-db-sr3-0.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr3-1.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr6-0.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr6-1.keycloak-db-headless.keycloak.svc.cluster.local,
        - name: MARIADB_ROOT_USER
          value: root
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-root-password
              name: keycloak-db-secret
        - name: MARIADB_USER
          value: keycloak-admin
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: keycloak-db-secret
        - name: MARIADB_DATABASE
          value: keycloak
        - name: MARIADB_GALERA_MARIABACKUP_USER
          value: mariabackup
        - name: MARIADB_GALERA_MARIABACKUP_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-galera-mariabackup-password
              name: keycloak-db-secret
        - name: MARIADB_ENABLE_LDAP
          value: "no"
        - name: MARIADB_ENABLE_TLS
          value: "no"
        image: docker.io/bitnami/mariadb-galera:10.6.12-debian-11-r6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              exec mysql -u"${MARIADB_ROOT_USER}" -p"${password_aux}" -e "select * from mysql.wsrep_cluster_members;"
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: mariadb-galera
        ports:
        - containerPort: 3306
          name: mysql
        - containerPort: 4567
          name: galera
        - containerPort: 4568
          name: ist
        - containerPort: 4444
          name: sst
        readinessProbe:
          exec:
            command:
            - bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              exec mysqladmin status -u"${MARIADB_ROOT_USER}" -p"${password_aux}"
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /opt/bitnami/mariadb/.bootstrap
          name: previous-boot
        - mountPath: /bitnami/mariadb
          name: data
        - mountPath: /bitnami/conf/my.cnf
          name: mariadb-galera-config
          subPath: my.cnf
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR3
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: default
      volumes:
      - emptyDir: {}
        name: previous-boot
      - configMap:
          name: keycloak-db-configuration-sr3
        name: mariadb-galera-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        app.kubernetes.io/instance: mariadb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mariadb-galera
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: local-storage
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/instance: mariadb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb-galera
    helm.sh/chart: mariadb-galera-7.5.1
  name: keycloak-db-sr6
  namespace: keycloak
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: mariadb
      app.kubernetes.io/name: mariadb-galera
  serviceName: keycloak-db-headless
  template:
    metadata:
      annotations:
        version/keycloak-db-secret: v1
      labels:
        app.kubernetes.io/instance: mariadb
        app.kubernetes.io/name: mariadb-galera
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: mariadb
                  app.kubernetes.io/name: mariadb-galera
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - command:
        - bash
        - -ec
        - |
          exec /opt/bitnami/scripts/mariadb-galera/entrypoint.sh /opt/bitnami/scripts/mariadb-galera/run.sh
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MARIADB_DEFAULT_PORT_NUMBER
          value: "3306"
        - name: MARIADB_GALERA_CLUSTER_NAME
          value: galera
        - name: MARIADB_GALERA_CLUSTER_ADDRESS
          value: gcomm://keycloak-db-sr3-0.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr3-1.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr6-0.keycloak-db-headless.keycloak.svc.cluster.local,keycloak-db-sr6-1.keycloak-db-headless.keycloak.svc.cluster.local,
        - name: MARIADB_ROOT_USER
          value: root
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-root-password
              name: keycloak-db-secret
        - name: MARIADB_USER
          value: keycloak-admin
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: keycloak-db-secret
        - name: MARIADB_DATABASE
          value: keycloak
        - name: MARIADB_GALERA_MARIABACKUP_USER
          value: mariabackup
        - name: MARIADB_GALERA_MARIABACKUP_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-galera-mariabackup-password
              name: keycloak-db-secret
        - name: MARIADB_ENABLE_LDAP
          value: "no"
        - name: MARIADB_ENABLE_TLS
          value: "no"
        image: docker.io/bitnami/mariadb-galera:10.6.12-debian-11-r6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              exec mysql -u"${MARIADB_ROOT_USER}" -p"${password_aux}" -e "select * from mysql.wsrep_cluster_members;"
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: mariadb-galera
        ports:
        - containerPort: 3306
          name: mysql
        - containerPort: 4567
          name: galera
        - containerPort: 4568
          name: ist
        - containerPort: 4444
          name: sst
        readinessProbe:
          exec:
            command:
            - bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              exec mysqladmin status -u"${MARIADB_ROOT_USER}" -p"${password_aux}"
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /opt/bitnami/mariadb/.bootstrap
          name: previous-boot
        - mountPath: /bitnami/mariadb
          name: data
        - mountPath: /bitnami/conf/my.cnf
          name: mariadb-galera-config
          subPath: my.cnf
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR6
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: default
      volumes:
      - emptyDir: {}
        name: previous-boot
      - configMap:
          name: keycloak-db-configuration-sr6
        name: mariadb-galera-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        app.kubernetes.io/instance: mariadb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mariadb-galera
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: local-storage
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-sr3
  namespace: keycloak
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloakx
  serviceName: keycloak-headless
  template:
    metadata:
      annotations:
        checksum/config-startup: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        version/keycloak-admin-secret: v1
        version/keycloak-db-secret: v1
      labels:
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/name: keycloakx
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                  - test
                matchLabels:
                  app.kubernetes.io/instance: keycloak
                  app.kubernetes.io/name: keycloakx
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - test
              matchLabels:
                app.kubernetes.io/instance: keycloak
                app.kubernetes.io/name: keycloakx
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --verbose
        - start
        - --spi-events-listener-jboss-logging-success-level=info
        - --spi-events-listener-jboss-logging-error-level=warn
        command:
        - /opt/keycloak/bin/kc.sh
        env:
        - name: KC_LOG_LEVEL
          value: INFO,io.quarkus.vertx.http:TRACE
        - name: KC_HOSTNAME_ADMIN
          value: grstgkeycloak.estpak.ee
        - name: KC_HOSTNAME
          value: grstgkeycloak.estpak.ee
        - name: KC_HTTP_RELATIVE_PATH
          value: /
        - name: KC_CACHE
          value: ispn
        - name: KC_CACHE_STACK
          value: kubernetes
        - name: KC_PROXY
          value: edge
        - name: KC_DB
          value: mariadb
        - name: KC_DB_URL_HOST
          value: keycloak-db.keycloak.svc.cluster.local
        - name: KC_DB_URL_PORT
          value: "3306"
        - name: KC_DB_URL_DATABASE
          value: keycloak
        - name: KC_DB_USERNAME
          value: keycloak-admin
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: keycloak-db-secret
        - name: KC_METRICS_ENABLED
          value: "true"
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_TRANSACTION_XA_ENABLED
          value: "false"
        - name: KC_HOSTNAME_PATH
          value: /
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_HTTP_PORT
          value: "8080"
        - name: KC_HOSTNAME_STRICT
          value: "true"
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "true"
        - name: KC_HOSTNAME_STRICT_BACKCHANNEL
          value: "false"
        - name: JAVA_OPTS_APPEND
          value: -XX:+UseContainerSupport -XX:MaxRAMPercentage=50.0 -Dcom.redhat.fips=false
            -Djgroups.dns.query=keycloak-headless.keycloak.svc.cluster.local
        envFrom:
        - secretRef:
            name: keycloak-admin-secret
        image: quay.io/keycloak/keycloak:20.0.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 0
          timeoutSeconds: 5
        name: keycloak
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 1
      enableServiceLinks: true
      initContainers:
      - command:
        - sh
        - -c
        - |
          echo 'Waiting for Database to become ready...'

          until printf "." && nc -z -w 2 keycloak-db.keycloak.svc.cluster.local 3306; do
              sleep 2;
          done;

          echo 'Database OK ✓'
        image: docker.io/busybox:1.32
        imagePullPolicy: IfNotPresent
        name: dbchecker
        resources:
          limits:
            cpu: 20m
            memory: 32Mi
          requests:
            cpu: 20m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR3
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      serviceAccountName: keycloak-sr3
      terminationGracePeriodSeconds: 60
  updateStrategy:
    type: RollingUpdate
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloakx
    app.kubernetes.io/version: 20.0.3
    helm.sh/chart: keycloakx-2.1.1
  name: keycloak-sr6
  namespace: keycloak
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloakx
  serviceName: keycloak-headless
  template:
    metadata:
      annotations:
        checksum/config-startup: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        version/keycloak-admin-secret: v1
        version/keycloak-db-secret: v1
      labels:
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/name: keycloakx
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: NotIn
                  values:
                  - test
                matchLabels:
                  app.kubernetes.io/instance: keycloak
                  app.kubernetes.io/name: keycloakx
              topologyKey: topology.kubernetes.io/zone
            weight: 100
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: NotIn
                values:
                - test
              matchLabels:
                app.kubernetes.io/instance: keycloak
                app.kubernetes.io/name: keycloakx
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --verbose
        - start
        - --spi-events-listener-jboss-logging-success-level=info
        - --spi-events-listener-jboss-logging-error-level=warn
        command:
        - /opt/keycloak/bin/kc.sh
        env:
        - name: KC_LOG_LEVEL
          value: INFO,io.quarkus.vertx.http:TRACE
        - name: KC_HOSTNAME_ADMIN
          value: grstgkeycloak.estpak.ee
        - name: KC_HOSTNAME
          value: grstgkeycloak.estpak.ee
        - name: KC_HTTP_RELATIVE_PATH
          value: /
        - name: KC_CACHE
          value: ispn
        - name: KC_CACHE_STACK
          value: kubernetes
        - name: KC_PROXY
          value: edge
        - name: KC_DB
          value: mariadb
        - name: KC_DB_URL_HOST
          value: keycloak-db.keycloak.svc.cluster.local
        - name: KC_DB_URL_PORT
          value: "3306"
        - name: KC_DB_URL_DATABASE
          value: keycloak
        - name: KC_DB_USERNAME
          value: keycloak-admin
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: keycloak-db-secret
        - name: KC_METRICS_ENABLED
          value: "true"
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_TRANSACTION_XA_ENABLED
          value: "false"
        - name: KC_HOSTNAME_PATH
          value: /
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_HTTP_PORT
          value: "8080"
        - name: KC_HOSTNAME_STRICT
          value: "true"
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "true"
        - name: KC_HOSTNAME_STRICT_BACKCHANNEL
          value: "false"
        - name: JAVA_OPTS_APPEND
          value: -XX:+UseContainerSupport -XX:MaxRAMPercentage=50.0 -Dcom.redhat.fips=false
            -Djgroups.dns.query=keycloak-headless.keycloak.svc.cluster.local
        envFrom:
        - secretRef:
            name: keycloak-admin-secret
        image: quay.io/keycloak/keycloak:20.0.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 0
          timeoutSeconds: 5
        name: keycloak
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 1
      enableServiceLinks: true
      initContainers:
      - command:
        - sh
        - -c
        - |
          echo 'Waiting for Database to become ready...'

          until printf "." && nc -z -w 2 keycloak-db.keycloak.svc.cluster.local 3306; do
              sleep 2;
          done;

          echo 'Database OK ✓'
        image: docker.io/busybox:1.32
        imagePullPolicy: IfNotPresent
        name: dbchecker
        resources:
          limits:
            cpu: 20m
            memory: 32Mi
          requests:
            cpu: 20m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
      nodeSelector:
        daas.teliacompany.net/type: application_node
        topology.kubernetes.io/zone: SR6
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      serviceAccountName: keycloak-sr6
      terminationGracePeriodSeconds: 60
  updateStrategy:
    type: RollingUpdate
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  creationTimestamp: null
  name: keycloak-admin-secret
  namespace: keycloak
spec:
  encryptedData:
    KEYCLOAK_ADMIN: AgAQfNDp1Y3/GnmIRXAH6nSTO3qy5/eoeT2QXGTLtwdAoGDmOMiJOQDS2FT1XnttH+ncmG6tOBQ985OTAp7tiDHIhMS9jzs0FHMI4tyVKifoL6HlDeh8QPT7fWUpeoaQfrBdz8Rt2ilRif9n5qvCATShH3FUobrHixyYua7wRyzVrWAdpeEoc+QPxNBGWCo536KANwf86/5AkKG+AeEjrkMDNq+0deD1/3eiDs/Mf5VG2RO0gAN7w+YAZH26qUpBkx4yhTmAR+lQY3ON20zBkaUdiKQQvU67orac9sdiS0HI/9WTInAFpju6FKTnRH8ElLgiMXtxU8kdF3d4Jye422Qoi8I2OYUQQUlta/PLdlWq79y/G4g51dC5S5JBor2aA60yOyg/9qiODg0LekF9j4t/cgoyb6pgV10HAg1omfk0un5Fju+wNGxX+RAvFHmLnWp/clTGtTQIgKKKh79RtjAQ77HP+6CzPerUJCVNT8ftUIPR09/xH22nc+nDkalYtQP5VOWS6kRMqR6F/bOV3q89xKDHP0Nxhjw2vuu6PCqy3qapJMz7jxydvWHtein+yRYnDqV7nHSxQu1APtBUxjRrN2F2bhKVdIJoUaD+pa3p0LfKV134RLJDnRy8XAuQaelGWuHFvjUE8Yu4MRGu0rB04NVDPrJ4ThX7smnusUsav57eBLA/l8JMWEfSlnIdqcVpuBiieQ==
    KEYCLOAK_ADMIN_PASSWORD: AgAZJIfc73jEg8eL/C2pH59ulJcImSKuIvmHq4Q82K2v4gNVHFugNZ4v8yIP+Y7JfG3gfwRN3BresdiVAcJKQ+kehRw8HXovQd26nu8nwMVRHG+OuFAscyQpJkJx1nCRzG1YWoPsDnzrM41QldqA8DV7NvlQ2g75L7A1HQkCNz9ziAjZ/v7B9LyIw1iJ7y0Srrc4MNd7p8HQqO/sMSBj+qjuTBgqgkZbJBahu0bPMv6fOEBUCTey2tDWJYdFx/alw8yKnJ7mDquBNJSw3wh6Zuz6aRz8YCFwTuoP2JiTQXsSjFW7og5do56hejrmNJW7qXd9aKv5eEhSn7SmqszonrVGlEA5dLHPBOPd0oJkJuISPgYnEddCYVC1larTHdImWzbmXW2lQzpto1kL4HEJ/VbhUeSPazfY78F3d1qhtdM9i0/610BvH1r1OwBhCLIn6OtZSH+Xo2PjdcRc4JOMbczF4LKxju7RNUf/TrutJIuo0MhSbcvUlMJ72MH1pmsRfE4Vu5JcGoUHiOliADXUgNV9UGui3Tc299D/r+RicFLFsbJU8WhB60ujdTtPf41kHZypYdbi+Ke/YeP+cxmOL5EzrlvlR47ZchfdCXKM8fMpzzKhP/Ti2VgcpffpQj62KkIfGxIEjcDRywtmpaPpMJFDn2GHuDwlVYM0skS4EnHIdLCXF9vUPGclY3atidcgJoEPn8vWSCjZLcwosa8o6nOPcUw=
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: "true"
        version/keycloak-admin-secret: v1
      creationTimestamp: null
      name: keycloak-admin-secret
      namespace: keycloak
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  creationTimestamp: null
  name: keycloak-db-secret
  namespace: keycloak
spec:
  encryptedData:
    mariadb-password: AgBQopYouphNP7PpfOhk7DIEG8X1QnDA7z7fLPIj8fQmxWUboQzuEeTc0n2uHW1UIts+Ly4zSqeY2ts6RAy7FXF5w2+R+dbB5LuGotP+6a93X/Mi9T4lxf6xzDR7S6fvTx8TIXtPrSIKlwoWF2Q4X8Ms8WfGd/+ua0CWW9xUWDwE9DiSLQqaSn75XSO81ZKoovT447JBwA1/rAqrTHVOFo7+ROBGBBIEWcHEtD7+xXGGAYjS5/aizTjH249pPBmA/Zir1fh4nXTWiXOLvuvGFrexV6X9w3An05akv7jHTzdQzIs4Ep2x/3jhphqtvtJHFepmFN5QieeP9dG9VdJn8nYu2Ie+4tyHPl3wq0bTbmlxKMpss5XzUdSfLkXBBTWLxMAP2RuKybhhZGPmPOUQifNH2oVOWAKOL+BM6rA++zvHXRA4TWT5d6CaVHADTXqRVlPsjoZcAqd54ZohpdZ7bPeB49558RJ8dLSAgWHh4nzlu58AxrcyN8FU6Oi6MMCrEMgUnHoCJIRznNysBr9XH67dtFCVuOloiCwcM9Jjs3vFKBKLDkYAbgtDlQMi7Wjkou5FFfunYulUMH71SLNc3L+dTl9vUv2z0KfcpQ1x2IMJZPkdlEhzvDRvwTuZRhuc+ZOLPIODSqmrBOH8VMM31IKoMg7wacPQ4tfVH5UfukHvkTbTwuZgQ7OHj4WlXn4j90Hdr8zS/ahvT7zP3IzksuI=
    mariadb-replication-password: AgByhs8FjzPmeZlxZYnHS7kZKsemlzYK5xbXwIauObh190Yy71SwSj/784F+o6l2gPw9BI4GIQE4Jn3g0qDsTxpKYrXjXjbPmSavUeZvM2MiSyLr4Y2kU7x+hnLVPqVOb7Q4eovcJIaVTXPA36TtzmJdnyToZS+k7mdhDhEI6mGio6/f3et5ucK2ssK3d/KEX+OazMae8xIVZUer/igw5FQ6VI/q+Ertj+KCuDWC9Bor8ditapR257l/YIu4pmwJmKfmFzXoBq7RNETwhTH0EAq6d9v7zmRyZLf6htjTSXwPJnlQwXqHqg6vikUxotg1EP5T9uvdvjKWA1z4hdFpEqlQvJ+GydFwWTg2x65q6ktt6weehUXJw9TK6T0yVfs6oEjaYXFCe9h59EmBNF2QksZZPt41Eg7Z5waX9DIjMZ8NNTLqbBLRerg7QLipm7s7S4oM560+FKeVdw7YYtR1sWF2B/w0Y3Qcc4vRVpQYiL/PpSjc2Ys5/0/aYfUPVdXUc3zGjbzDbYqpndkT8LeRUBKwBsyx2GkIlCYfsvAjmxvK9Bo+/Z6keaf81TZmq0IwoGwgmwN7B7dBZWqg6WvpP1Kgq7QwL+G3UiQ5CLtqFZjkJr1+FDtZ//NmSVhGmk5NU2Fy+Sd22wAdqLgh6tRxkX0YeCnXLr/Bseqt6vynNib5pdGW+smkLoQHsL/Kz4GO+X/TS88uQHc2xjyKuAYAW082
    mariadb-root-password: AgBOaN1tyDvhbSFf/TSqO1Yk9hpjFlXXwb/CWJjIYRLadOlYhsy//QuaE6T5JXw8E7l0c74DMza/tD+7aYawhoofWYclEqzXuoeXpReHpTJnnpwf52Wp6iLyu05uSG47cLbm59ehBuE9BlH5VWPlhFESGc4pF6dM6d6rzo9Zi2rX78sxicYP5qkrjW5W0o6uUX+iXbjzHVaA8Q9FAue7HKjnGtyUs3PyHSwL8oA9BuIRpUosLeM/b3qG3wPFFmeoBZP2f8oS5vuX1wFF7v7W+S0CwY2zIDarZ6ZosVYMZ94XBat4MFxfqL9Hp5TpqS7WK7mdDag1j9Yp/tusN6vdudhR6hieFu6mMKn7GrY0v2ssEcntR87pGawofx01S3hB5kahL4BQEJcSvXLTHUcLwf8+fBMuUwWy2eAomOV2Uiagz6tDl811qUAqZglhV7EtsQPD0K25SZzyXPasTwR0HruFP48dKUlFOvoJ9SolyytxpKEnwgmy8JOmaMe2sLwWHhvjsQ337C6PqKKolgmGERtGDWBHmBiC9W44+MRMm7Me5AWgPF0zTTNRrfFk3vKBqXS2stHfIkgUowuOFFUE5IsBm+5h1O8fXaeiLKWPJa9b8ccDOPlYdsCywkqiBeKgASDh0JZK77h9RB3zpmRzS8nlppKC2rVK1snoXvSHJOr9OuLM+lSZJvYjdgka9/ZZBUN/2KQHnUOrHhrQ+giYyD7m5Mlx
  template:
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: "true"
        version/keycloak-db-secret: v1
      creationTimestamp: null
      name: keycloak-db-secret
      namespace: keycloak
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  creationTimestamp: null
  name: keycloak-server-cert-secret
  namespace: keycloak
spec:
  encryptedData:
    ca.pem: 
    cert.pem: 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
    chain.pem: 
    key.pem: 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
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: "0"
        sealedsecrets.bitnami.com/cluster-wide: "true"
        version/keycloak-server-cert-secret: v1
      creationTimestamp: null
      name: keycloak-server-cert-secret
      namespace: keycloak
    type: Opaque
---
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: keycloak-pool-sr3
  namespace: metallb-system
spec:
  addresses:
  - 90.190.54.233/32
  autoAssign: true
  avoidBuggyIPs: true
---
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: keycloak-pool-sr6
  namespace: metallb-system
spec:
  addresses:
  - 194.106.115.169/32
  autoAssign: true
  avoidBuggyIPs: true
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: keycloak-pool-sr3
  namespace: metallb-system
spec:
  ipAddressPools:
  - keycloak-pool-sr3
  nodeSelectors:
  - matchLabels:
      topology.kubernetes.io/zone: SR3
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: keycloak-pool-sr6
  namespace: metallb-system
spec:
  ipAddressPools:
  - keycloak-pool-sr6
  nodeSelectors:
  - matchLabels:
      topology.kubernetes.io/zone: SR6
